// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GameControlsComponent /> renders left arrow if affiliation menu is shown, 1`] = `
<div
  className="gameControls"
>
  <div
    className="buttons"
  >
    <div
      className="btn control"
      onClick={[MockFunction]}
      role="button"
      tabIndex="0"
    >
      <span
        className="buttonText"
      >
        <span>
          roles
          <i
            className="fa fa-fw fa-angle-left menuArrowIcon"
          />
        </span>
      </span>
    </div>
    <div
      className="btn control"
      onClick={[MockFunction]}
      role="button"
      tabIndex="0"
    >
      <span
        className="buttonText"
      >
        kick
      </span>
    </div>
    <div
      className="btn control"
      onClick={[MockFunction]}
      role="button"
      tabIndex="0"
    >
      <span
        className="buttonText"
      >
        ban
      </span>
    </div>
  </div>
</div>
`;

exports[`<GameControlsComponent /> renders right arrow if affiliation menu is hidden, and no owner buttons if user is not the owner (and no start game button either) 1`] = `
<div
  className="gameControls"
>
  <div
    className="buttons"
  >
    <div
      className="btn control"
      onClick={[MockFunction]}
      role="button"
      tabIndex="0"
    >
      <span
        className="buttonText"
      >
        <span>
          roles
          <i
            className="fa fa-fw fa-angle-right menuArrowIcon"
          />
        </span>
      </span>
    </div>
  </div>
</div>
`;

exports[`<GameControlsComponent /> shows additional start button if game is at new phase and user is an owner 1`] = `
<div
  className="gameControls"
>
  <div
    className="buttons"
  >
    <div
      className="btn control"
      onClick={[MockFunction]}
      role="button"
      tabIndex="0"
    >
      <span
        className="buttonText"
      >
        <span>
          roles
          <i
            className="fa fa-fw fa-angle-right menuArrowIcon"
          />
        </span>
      </span>
    </div>
    <div
      className="btn control"
      onClick={[MockFunction]}
      role="button"
      tabIndex="0"
    >
      <span
        className="buttonText"
      >
        start
      </span>
    </div>
    <div
      className="btn control"
      onClick={[MockFunction]}
      role="button"
      tabIndex="0"
    >
      <span
        className="buttonText"
      >
        kick
      </span>
    </div>
    <div
      className="btn control"
      onClick={[MockFunction]}
      role="button"
      tabIndex="0"
    >
      <span
        className="buttonText"
      >
        ban
      </span>
    </div>
  </div>
</div>
`;
