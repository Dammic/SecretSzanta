{"version":3,"sources":["static/liberalcard.png","static/facistcard.png","static/facistpoliciesSmall.png","static/Avatar1.png","static/Avatar2.png","static/Avatar3.png","static/Avatar4.png","static/Avatar5.png","static/Avatar6.png","static/Avatar21.png","static/Avatar50.png","static/liberalpolicies.png","static/facistpoliciesMedium.png","static/facistpoliciesLarge.png","static/Facist_Membership.png","static/Liberal_Membership.png","ducks/chatDuck.js","../Dictionary/index.js","ducks/userDuck.js","ducks/roomDuck.js","ducks/notificationsDuck.js","ducks/playersDuck.js","ducks/modalDuck.js","ducks/lobbyDuck.js","ducks/rootDuck.js","store.js","features/Shared/Icon/Icon.js","features/Header/HeaderComponent.js","features/Header/Header.js","utils/avatarsHelper.js","features/Shared/Buttons/Button/Button.js","features/Shared/Buttons/PrimaryButton/PrimaryButton.js","features/Shared/Buttons/FancyButton/FancyButton.js","features/Shared/Buttons/ControlButton/ControlButton.js","features/LoginPage/LoginPageComponent.js","utils/SocketHandler.js","features/LoginPage/LoginPage.js","features/UIBox/GameControls/GameControlsComponent.js","utils/collectionsHelper.js","gameLogic/ownerActions.js","features/UIBox/GameControls/GameControls.js","features/Shared/PlayerAvatar/PlayerRole/PlayerRole.js","features/Shared/PlayerAvatar/PlayerAvatar.js","features/UIBox/Submenu/SubmenuComponent.js","features/UIBox/Submenu/Submenu.js","features/UIBox/UIBox.js","features/PlayerBoard/Player/VoteBubble/VoteBubble.js","features/PlayerBoard/Player/PlayerComponent.js","features/PlayerBoard/Player/Player.js","features/PlayerBoard/CurtainWrapper/CurtainWrapper.js","features/PlayerBoard/PlayerBoardComponent.js","features/PlayerBoard/PlayerBoard.js","features/Chat/MessagesBox/MessagesBoxComponent.js","features/Chat/MessagesBox/MessagesBox.js","features/Chat/ChatForm/ChatFormComponent.js","features/Chat/ChatForm/ChatForm.js","features/Chat/Chat.js","features/Timer/TimerComponent.js","features/Timer/Timer.js","features/GameRoom/GameRoomComponent.js","features/GameRoom/GameRoom.js","features/Lobby/components/GameList/components/RoomCell/RoomCell.js","features/Lobby/components/GameList/GameListComponent.js","features/Lobby/components/GameList/components/NoResults/NoResults.js","features/Lobby/components/GameList/GameList.js","features/Lobby/components/TopNavbar/TopNavbarComponent.js","features/Lobby/components/TopNavbar/TopNavbar.js","features/Lobby/components/PlayersList/PlayersListRow.js","features/Lobby/components/PlayersList/PlayersList.js","features/Lobby/Lobby.js","features/Modal/ModalComponent.js","features/Modal/WinningModal/WinningModalComponent.js","features/Modal/WinningModal/WinningModal.js","features/Modal/VotingModal/VotingModalComponent.js","features/Modal/VotingModal/VotingModal.js","features/Modal/PolicyChoiceModal/PolicyChoiceModalComponent.js","features/Modal/PolicyChoiceModal/PolicyChoiceModal.js","features/Modal/HaltModal/HaltModalComponent.js","features/Modal/HaltModal/HaltModal.js","features/Modal/PeekAffiliationModal/PeekAffiliationModalComponent.js","features/Modal/PeekAffiliationModal/PeekAffiliationModal.js","features/Modal/GameEndModal/GameEndModalComponent.js","features/Modal/GameEndModal/GameEndModal.js","features/Modal/CreateGameModal/CreateGameModalComponent.js","features/Modal/Modal.js","features/Modal/CreateGameModal/CreateGameModal.js","features/Notifications/NotificationPanel.js","features/Notifications/components/Counter/Counter.js","features/Notifications/utils.js","features/Notifications/StatusNotification.js","features/Notifications/NotificationsComponent.js","features/Notifications/Notifications.js","features/LandingPage/StaticPages/News/NewsComponent.js","features/LandingPage/StaticPages/News/News.js","features/LandingPage/StaticPages/HowToPlay/HowToPlayComponent.js","features/LandingPage/StaticPages/About/AboutComponent.js","features/LandingPage/LandingPage.js","features/NotFound/NotFoundComponent.js","features/NotFound/NotFound.js","index.js"],"names":["module","exports","_ErrorMappedMessages","addMessage","createAction","clearChat","initialState","messages","actions","state","action","payload","timestamp","content","author","newMessage","time","moment","unix","format","handleActions","SocketEvents","SelectName","SyncLobby","SyncPolicies","IncreaseTrackerPosition","PlayersListChanged","SyncRoomsList","RoomsListChanged","AllowEnteringRoom","ServerWaitingForVeto","VetoVoteRegistered","CLIENT_SEND_MESSAGE","ClientGameNotification","CLIENT_JOIN_ROOM","CLIENT_LEAVE_ROOM","CLIENT_GET_ROOM_DATA","CLIENT_CREATE_ROOM","CLIENT_ERROR","VOTING_PHASE_START","CLIENT_VOTE","VOTING_PHASE_NEWVOTE","VOTING_PHASE_REVEAL","START_GAME","CHANCELLOR_CHOICE_PHASE","BECOME_FACIST","KillSuperpowerUsed","PlayerKilled","PlayerKicked","PlayerBanned","GameFinished","PresidentChoosePolicy","ChancellorChoosePolicy","ChoosePolicy","NewPolicy","ResetTracker","SetTimer","DesignateNextPresident","SuperpowerAffiliationPeekPlayerChoose","SuperpowerAffiliationPeekAffiliationReveal","PeekCards","SetChooserPlayer","logoutPlayer","PlayerDirection","ROLE_CHANCELLOR","ROLE_PRESIDENT","ROLE_PREVIOUS_CHANCELLOR","ROLE_PREVIOUS_PRESIDENT","GamePhases","GAME_PHASE_NEW","GAME_PHASE_CHANCELLOR_CHOICE","GAME_PHASE_VOTING","GAME_PHASE_SUPERPOWER","GAME_PHASE_FINISHED","PresidentPolicyChoice","ChancellorPolicyChoice","ServerAcceptedVeto","Paused","DesignateNextPresidentPhase","PeekAffiliationSuperpowerPhase","PeekCardsSuperpower","Ended","PlayerAffilications","MessagesTypes","ErrorTypes","BeganGame","FullRoom","SamePlayerName","ChoiceModeContexts","ChancellorChoice","KillChoice","KickChoice","BanChoice","DesignateNextPresidentChoice","AffiliationPeekChoice","PolicyCards","Views","Home","Lobby","HowToPlay","News","About","Game","PlayerBoards","SmallBoard","MediumBoard","LargeBoard","selectName","setRoomName","toggleAffiliationMenu","setView","userName","roomName","isAffiliationHidden","currentView","viewName","newView","addPlayer","removePlayer","changeGamePhase","chooseNewChancellor","chooseNewPresident","syncRoomData","increasePolicyCount","setPoliciesCount","increaseTracker","resetTracker","revealFacists","registerVote","resetVotes","revealVotes","killPlayer","clearRoom","setWaitTime","setVeto","setBoardType","maxPlayers","ownerName","playersDict","gamePhase","potentialChancellorsChoices","facistPoliciesCount","liberalPoliciesCount","trackerPosition","votes","waitTime","isVetoUnlocked","boardType","player","playerName","newPlayersDict","newChancellor","previousChancellor","find","role","PlayerRole","currentChancellor","newPresident","previousPresident","currentPresident","isFacist","facist","liberal","isNil","facists","cloneDeep","forEach","affiliation","facistAvatar","newVotes","isDead","value","newBoardType","addNotification","deleteNotification","notifications","currentID","type","message","values","newID","newNotification","id","statusNotification","reject","setChoiceMode","setChooserPlayer","hideChoiceMode","choiceMode","isVisible","context","selectablePlayers","chooserPlayerName","setModal","toggleModal","title","overlayClosesModal","isCloseButtonShown","isOverlayOpaque","componentName","modalTmpData","initialData","syncLobby","changePlayerInPlayersList","changeRoomInRoomsList","playersList","players","roomsList","rooms","newPlayersList","room","newRoomsList","logoutUser","appReducer","combineReducers","chat","user","notification","modal","lobby","routing","routerReducer","history","createBrowserHistory","router","routerMiddleware","store","createStore","undefined","window","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","Icon","onClick","className","name","classNames","fontAwesome","fa","displayName","HeaderComponent","isLobbyVisible","isMobileNavOpen","openMobileNavigation","closeMobileNavigation","views","headerNavigationClasses","styles","headerNavigation","isOpen","menuIconClasses","headerContainer","header","appName","menuIcon","headerNavigationLinks","map","label","key","active","Header","setNewView","props","setState","this","shouldDisplayLobbyNav","React","PureComponent","connect","dispatch","avatarMapping","Liberal1","Liberal2","Liberal3","Liberal4","Liberal5","Liberal6","Fascist21","Fascist50","getAvatar","avatarKey","Button","children","tabIndex","btn","PrimaryButton","primary","FancyButton","fabulousButton","linedThick","ControlButton","control","buttonText","LoginPageComponent","onSetNameClick","setInputRef","onInputChange","onNameReset","avatar2","avatar3","loginPage","loginFormContainer","loginForm","loginInputGroup","ref","placeholder","onKeyPress","autoFocus","formText","changeNickname","src","alt","homeImageLarge","homeImageSmall","homeContent","socket","SocketHandler","switchRooms","targetRoomName","chatActions","userActions","cancelEveryGameChoice","playersActions","modalActions","IO","on","roomActions","data","hasGameEnded","notificationsActions","chancellorCandidate","presidentName","playersChoices","isOverlaysHidingNeeded","wasBanned","whoWon","wonText","error","setTimeout","policyCards","policies","chancellorName","policy","lobbyActions","playerInfo","cards","selectable","rootActions","bindActionCreators","LoginPage","event","setName","inpRef","inputRef","resetName","emit","renderButton","GameControlsComponent","onStartGame","onKickPlayer","onBanPlayer","onShowAffiliationClick","isOwner","ownersButtons","gameControls","buttons","menuArrowIcon","invokeOnEvery","array","functionToInvoke","element","startGame","resumeGame","openInvitePlayersScreen","startKickPlayerMode","getState","playersWithoutOwner","startBanPlayerMode","endGame","GameControls","toggleShow","roleMapping","PlayerRoleDict","previousRoles","roleName","ribbonNameClassNames","chancellor","previous","includes","ribbon","PlayerAvatar","liberalAvatar","fascistAvatar","isPlayerWaitedFor","liberalAvatarPicture","fascistAvatarPicture","avatarWrapper","dead","ownerIcon","selectingWaitIcon","portrait","fascistPortrait","fascistsKinds","SubmenuComponent","affiliationClassName","submenu","hidden","affiliationCards","card","uiBoxAvatar","renderPlayerCard","Submenu","get","UIBox","uiBox","bubbleStylesMapping","bubbleLeft","bubbleRight","bubbleTop","VoteBubble","getVoteBubbleStyle","direction","bubble","isBubbleActive","getVoteValue","vote","isUndefined","voteValue","PlayerComponent","bubbleDirection","isSelectable","onChoiceModeSelect","isChoiceModeVisible","playerWrapper","blurred","data-playername","Player","onPlayerClick","target","getAttribute","roomOwnerName","avatarNumber","CurtainWrapper","isHidden","isFascist","curtain","fascist","curtainWrapper","curtainPanel","left","right","PlayerBoardComponent","playersLeft","playersMiddle","playersRight","policiesLiberalCount","policiesFacistCount","trackerMoved","renderFascistPlayerBoard","isPlayerboardHidden","isModalVisible","renderPolicies","count","cardType","result","cardPicture","liberalCard","facistCard","times","index","push","renderPlayers","containerClass","trackerFromLeftStyle","playerBoardClasses","playerBoard","choiceOverlay","playersContainer","centralPart","playersContainerMiddle","liberalPolicies","policyCard","policyCardLiberal","tracker","moving","style","policyCardFascist","PlayerBoard","makePlayer","selection","hideChoice","socketEvent","console","info","getFascistPlayerBoard","SmallFascistPlayerBoardImage","MediumFascistPlayerBoardImage","LargeFascistPlayerBoardImage","nextProps","prevProps","delay","playersWithoutMe","center","choiceModeContext","MessagesBoxComponent","forwardRef","messagesBoxRef","messagesBox","displayedMessage","serverMessage","buildMessage","propTypes","PropTypes","arrayOf","objectOf","any","MessagesBox","scrollToBottomOfMessages","current","scrollTop","scrollHeight","createRef","prevState","snapshot","offsetHeight","ChatFormComponent","sendMessage","typedMessage","changeMessageText","handleFormKeyPress","chatForm","sendInput","onChange","sendButton","ChatForm","Chat","TimerComponent","secondsRemaining","onVetoClick","timer","visible","veto","Timer","tick","clearInterval","interval","setInterval","GameRoomComponent","gameRoom","GameRoom","scrollTo","RoomCell","playersCount","roomId","hasPassword","onJoin","useState","showPasswordInput","setPasswordInputVisibility","password","setPassword","useCallback","passwordInput","onKeyDown","rightSide","button","icon","playerCount","GameListComponent","gameList","gameListElement","NoResults","noResults","noResultsHeadline","noResultsParagraph","joinRoom","GameList","size","TopNavbarComponent","onShowModal","topBar","commonStyles","ellipsis","TopNavbar","modalOptions","PlayersListRow","currentRoom","playerRow","busy","avatar","roomNameText","mobile","groupedPlayers","groupBy","category","true","false","gameListContainer","firstColumn","secondColumn","lobbyChat","ModalComponent","closeModal","child","overlayClasses","modalOverlay","opaque","CSSTransition","in","timeout","unmountOnExit","mountOnEnter","appear","enter","modalEnter","enterActive","modalEnterActive","exit","modalExit","exitActive","modalExitActive","modalContainer","modalContent","modalCloseButton","modalTitle","modalBody","WinningModalComponent","winners","losers","winningModal","list","winner","winnerDance","avatarName","loser","loserSorrow","drop","WinningModal","liberalsWon","liberals","filter","VotingModalComponent","onYesVote","onNoVote","president","renderPlayer","votingInfoPlayer","Fragment","votingInfoContainer","choiceOrderContainer","votingIntro","votingButtonsContainer","VotingModal","isVotingModalShown","liberalPolicy","require","fascistPolicy","PolicyChoiceModalComponent","onButtonClose","policyClasses","policyChoiceModal","policyList","choice","data-index","acknowledgeButton","PolicyChoiceModal","onPolicyChoice","HaltModalComponent","onResumeGame","onInvitePlayers","onEndGame","pauseGameReason","ownerButton","haltBody","HaltModal","PeekAffiliationModal","membershipImage","FacistMembershipImage","LiberalMembershipImage","peekAffiliationModal","playerImages","playerInfoName","defaultProps","onModalClose","PeekAffiliationModalComponent","GameEndModalComponent","gameEndModal","playerContainer","GameEndModal","CreateGameModalComponent","onCreate","createGameModal","inputField","min","max","createButton","modalInnerComponents","CreateGameModal","Modal","ModalInnerComponent","NotificationPanel","handleClose","notificationPanel","status","Counter","counter","start","countDown","newCounter","StatusNotification","template","regex","matchedKeys","match","splitedNodes","compact","split","val","keyName","trim","markupMessage","fromPairs","lowercasedKey","toLowerCase","replaceKeysWithComponent","NotificationsComponent","additional","Notifications","selectedNotifications","reverse","takeRight","NewsComponent","news","HowToPlayComponent","howToPlay","AboutComponent","about","LandingPage","renderCurrentView","returnedView","page","landingPage","NotFoundComponent","text404","NotFound","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.7fe21611.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/liberalcard.3e709620.png\";","module.exports = __webpack_public_path__ + \"static/media/facistcard.3a9ecb71.png\";","module.exports = __webpack_public_path__ + \"static/media/facistpoliciesSmall.ca421e94.png\";","module.exports = __webpack_public_path__ + \"static/media/Avatar1.411a364f.png\";","module.exports = __webpack_public_path__ + \"static/media/Avatar2.6d42187f.png\";","module.exports = __webpack_public_path__ + \"static/media/Avatar3.28a225fc.png\";","module.exports = __webpack_public_path__ + \"static/media/Avatar4.6c165ec8.png\";","module.exports = __webpack_public_path__ + \"static/media/Avatar5.2d93d2f5.png\";","module.exports = __webpack_public_path__ + \"static/media/Avatar6.0b839208.png\";","module.exports = __webpack_public_path__ + \"static/media/Avatar21.de24582b.png\";","module.exports = __webpack_public_path__ + \"static/media/Avatar50.b472a295.png\";","module.exports = __webpack_public_path__ + \"static/media/liberalpolicies.19a22f21.png\";","module.exports = __webpack_public_path__ + \"static/media/facistpoliciesMedium.2b4fcac6.png\";","module.exports = __webpack_public_path__ + \"static/media/facistpoliciesLarge.4c447b44.png\";","module.exports = __webpack_public_path__ + \"static/media/Facist_Membership.6c54adc3.png\";","module.exports = __webpack_public_path__ + \"static/media/Liberal_Membership.9fe149d0.png\";","import moment from 'moment'\r\nimport { handleActions, createAction } from 'redux-actions'\r\n\r\n// Actions\r\nconst addMessage = createAction('chat/ADD_MESSAGE')\r\nconst clearChat = createAction('chat/CLEAR_CHAT')\r\n\r\nconst initialState = {\r\n    messages: [],\r\n}\r\n\r\nconst actions = {\r\n    [addMessage]: (state, action) => {\r\n        const { messages } = state\r\n        const { timestamp, content, author } = action.payload\r\n        const newMessage = {\r\n            time: moment.unix(timestamp).format('HH:mm'),\r\n            content,\r\n            author: author || '',\r\n        }\r\n        return {\r\n            ...state,\r\n            messages: [...messages, newMessage],\r\n        }\r\n    },\r\n    [clearChat]: state => {\r\n        return initialState\r\n    },\r\n}\r\n\r\nexport { addMessage, clearChat }\r\nexport default handleActions(actions, initialState)\r\n","import _defineProperty from \"/home/dammic/projects/SecretSzanta/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _ErrorMappedMessages;\n\nexport var SocketEvents = {\n  SelectName: 'CLIENT_SELECT_NAME',\n  SyncLobby: 'SYNC_LOBBY',\n  SyncPolicies: 'SYNC_POLICIES',\n  IncreaseTrackerPosition: 'IncreaseTrackerPosition',\n  PlayersListChanged: 'PLAYERS_LIST_CHANGED',\n  SyncRoomsList: 'SYNC_ROOMS_LIST',\n  RoomsListChanged: 'ROOMS_LIST_CHANGED',\n  AllowEnteringRoom: 'ALLOW_ENTERING_ROOM',\n  ServerWaitingForVeto: 'SERVER_WAITING_FOR_VETO',\n  VetoVoteRegistered: 'VETO_VOTE_REGISTERED',\n  CLIENT_SEND_MESSAGE: 'CLIENT_SEND_MESSAGE',\n  ClientGameNotification: 'CLIENT_GAME_NOTIFICATION',\n  CLIENT_JOIN_ROOM: 'CLIENT_JOIN_ROOM',\n  CLIENT_LEAVE_ROOM: 'CLIENT_LEAVE_ROOM',\n  CLIENT_GET_ROOM_DATA: 'CLIENT_GET_ROOM_DATA',\n  CLIENT_CREATE_ROOM: 'CLIENT_CREATE_ROOM',\n  CLIENT_ERROR: 'CLIENT_ERROR',\n  VOTING_PHASE_START: 'VOTING_PHASE_START',\n  CLIENT_VOTE: 'CLIENT_VOTE',\n  VOTING_PHASE_NEWVOTE: 'VOTING_PHASE_NEWVOTE',\n  VOTING_PHASE_REVEAL: 'VOTING_PHASE_REVEAL',\n  START_GAME: 'START_GAME',\n  CHANCELLOR_CHOICE_PHASE: 'CHANCELLOR_CHOICE_PHASE',\n  BECOME_FACIST: 'BECOME_FACIST',\n  KillSuperpowerUsed: 'KILL_SUPERPOWER_USED',\n  PlayerKilled: 'PLAYER_KILLED',\n  PlayerKicked: 'PLAYER_KICKED',\n  PlayerBanned: 'PLAYER_BANNED',\n  GameFinished: 'GAME_FINISHED',\n  PresidentChoosePolicy: 'PRESIDENT_CHOOSE_POLICY',\n  ChancellorChoosePolicy: 'CHANCELLOR_CHOOSE_POLICY',\n  ChoosePolicy: 'CHOOSE_POLICY',\n  NewPolicy: 'NEW_POLICY',\n  ResetTracker: 'RESET_TRACKER',\n  SetTimer: 'SET_TIMER',\n  DesignateNextPresident: 'DESIGNATE_NEXT_PRESIDENT',\n  SuperpowerAffiliationPeekPlayerChoose: 'SUPERPOWER_AFFILIATION_PEEK_PLAYER_CHOOSE',\n  SuperpowerAffiliationPeekAffiliationReveal: 'SUPERPOWER_AFFILIATION_PEEK_AFFILIATION_REVEAL',\n  PeekCards: 'PEEK_CARDS',\n  SetChooserPlayer: 'SET_CHOOSER_PLAYER',\n  logoutPlayer: 'LOGOUT_PLAYER'\n};\nexport var PlayerDirection = {\n  PLAYER_DIRECTION_LEFT: 'PLAYER_DIRECTION_LEFT',\n  PLAYER_DIRECTION_UP: 'PLAYER_DIRECTION_UP',\n  PLAYER_DIRECTION_RIGHT: 'PLAYER_DIRECTION_RIGHT'\n};\nexport var PlayerRole = {\n  ROLE_CHANCELLOR: 'ROLE_CHANCELLOR',\n  ROLE_PRESIDENT: 'ROLE_PRESIDENT',\n  ROLE_PREVIOUS_CHANCELLOR: 'ROLE_PREVIOUS_CHANCELLOR',\n  ROLE_PREVIOUS_PRESIDENT: 'ROLE_PREVIOUS_PRESIDENT'\n};\nexport var GamePhases = {\n  GAME_PHASE_NEW: 'GAME_PHASE_NEW',\n  START_GAME: 'START_GAME',\n  GAME_PHASE_CHANCELLOR_CHOICE: 'GAME_PHASE_CHANCELLOR_CHOICE',\n  GAME_PHASE_VOTING: 'GAME_PHASE_VOTING',\n  GAME_PHASE_SUPERPOWER: 'GAME_PHASE_SUPERPOWER',\n  GAME_PHASE_FINISHED: 'GAME_PHASE_FINISHED',\n  PresidentPolicyChoice: 'GAME_PHASE_PRESIDENT_POLICY_CHOICE',\n  ChancellorPolicyChoice: 'GAME_PHASE_CHANCELLOR_POLICY_CHOICE',\n  ServerWaitingForVeto: 'GAME_PHASE_SERVER_WAITING_FOR_VETO',\n  ServerAcceptedVeto: 'GAME_PHASE_SERVER_ACCEPTED_VETO',\n  Paused: 'GAME_PHASE_PAUSE',\n  DesignateNextPresidentPhase: 'GAME_PHASE_DESIGNATE_NEXT_PRESIDENT',\n  PeekAffiliationSuperpowerPhase: 'PEEK_AFFILIATION_SUPERPOWER_PHASE',\n  PeekCardsSuperpower: 'GAME_PHASE_PEEK_CARDS_SUPERPOWER',\n  Ended: 'GAME_PHASE_ENDED'\n};\nexport var PlayerAffilications = {\n  LIBERAL_AFFILIATION: 'LIBERAL_AFFILIATION',\n  FACIST_AFFILIATION: 'FACIST_AFFILIATION',\n  HITLER_AFFILIATION: 'HITLER_AFFILIATION'\n};\nexport var MessagesTypes = {\n  ERROR: 'ERROR',\n  INFO: 'INFO',\n  STATUS: 'STATUS'\n};\nexport var ErrorMessages = {\n  notOwner: 'This action is forbidden! You are not the owner!',\n  notPresident: 'This action is reserved for president!',\n  notChancellor: 'This action is reserved for chancellor!',\n  NameTaken: 'The selected name is already taken'\n};\nexport var ErrorTypes = {\n  DeniedRoomEntry: {\n    BeganGame: 'DENIED_ROOM_ENTRY_BEGAN_GAME',\n    FullRoom: 'DENIED_ROOM_ENTRY_FULL_ROOM',\n    SamePlayerName: 'DENIED_ROOM_ENTRY_SAME_PLAYER_NAME'\n  }\n};\nexport var ChoiceModeContexts = {\n  ChancellorChoice: 'CONTEXT_CHANCELLOR_CHOICE',\n  KillChoice: 'CONTEXT_KILL_CHOICE',\n  KickChoice: 'CONTEXT_KICK_CHOICE',\n  BanChoice: 'CONTEXT_BAN_CHOICE',\n  DesignateNextPresidentChoice: 'CONTEXT_DESIGNATE_NEXT_PRESIDENT_CHOICE',\n  AffiliationPeekChoice: 'CONTEXT_AFFILIATION_PEEK_CHOICE'\n};\nexport var PolicyCards = {\n  FacistPolicy: 'FACIST_POLICY',\n  LiberalPolicy: 'LIBERAL_POLICY'\n};\nexport var Views = {\n  Home: 'HOME',\n  Lobby: 'LOBBY',\n  HowToPlay: 'HOW_TO_PLAY',\n  News: 'NEWS',\n  About: 'ABOUT',\n  Game: 'GAME'\n};\nexport var PlayerBoards = {\n  SmallBoard: 'SMALL_BOARD',\n  MediumBoard: 'MEDIUM_BOARD',\n  LargeBoard: 'LARGE_BOARD'\n};\nexport var WinReasons = {\n  fiveLiberalCards: '5 liberal policies have been enacted',\n  hitlerDead: 'Hitler has been assassinated',\n  sixFascistCards: '6 fascist policies have been enacted',\n  hitlerBecameChancellor: 'Hitler has become chancellor after 4 fascist cards have been enacted'\n};\nexport var GlobalRoomName = 'Global';\nexport var ErrorMappedMessages = (_ErrorMappedMessages = {}, _defineProperty(_ErrorMappedMessages, ErrorTypes.DeniedRoomEntry.BeganGame, 'The game has already began!'), _defineProperty(_ErrorMappedMessages, ErrorTypes.DeniedRoomEntry.FullRoom, 'The room is full!'), _defineProperty(_ErrorMappedMessages, ErrorTypes.DeniedRoomEntry.SamePlayerName, 'There is a player with the same name in the room!'), _ErrorMappedMessages);","import { handleActions, createAction } from 'redux-actions'\r\nimport { Views } from '../../Dictionary'\r\n\r\n// Actions\r\nconst selectName = createAction('user/SELECT_NAME')\r\nconst setRoomName = createAction('user/SET_ROOM_NAME')\r\nconst toggleAffiliationMenu = createAction('user/TOGGLE_AFFILIATION_MENU')\r\nconst setView = createAction('user/SET_VIEW')\r\n\r\nconst initialState = {\r\n    userName: '',\r\n    roomName: '',\r\n    isAffiliationHidden: false,\r\n    currentView: Views.Home,\r\n}\r\n\r\nconst actions = {\r\n    [selectName]: (state, action) => {\r\n        const { userName } = action.payload\r\n        return {\r\n            ...state,\r\n            userName,\r\n        }\r\n    },\r\n    [setRoomName]: (state, action) => {\r\n        const { roomName } = action.payload\r\n        return {\r\n            ...state,\r\n            roomName,\r\n        }\r\n    },\r\n    [toggleAffiliationMenu]: (state) => {\r\n        const { isAffiliationHidden } = state\r\n        return {\r\n            ...state,\r\n            isAffiliationHidden: !isAffiliationHidden,\r\n        }\r\n    },\r\n    [setView]: (state, action) => {\r\n        const { viewName } = action.payload\r\n        const { userName, roomName } = state\r\n\r\n        let newView = viewName\r\n        if ((viewName === Views.Lobby && !userName) || (viewName === Views.Game && !roomName)) {\r\n            newView = Views.Home\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            currentView: newView,\r\n        }\r\n    },\r\n}\r\n\r\nexport { selectName, setRoomName, toggleAffiliationMenu, setView }\r\nexport default handleActions(actions, initialState)\r\n","import { handleActions, createAction } from 'redux-actions'\r\nimport { cloneDeep, forEach, find, isNil } from 'lodash'\r\nimport { PlayerRole } from '../../Dictionary'\r\n\r\n// Actions\r\nexport const addPlayer = createAction('room/addPlayer')\r\nexport const removePlayer = createAction('room/REMOVE_PLAYER')\r\nexport const changeGamePhase = createAction('room/CHANGE_GAME_PHASE')\r\nexport const chooseNewChancellor = createAction('room/CHOOSE_NEW_CHANCELLOR')\r\nexport const chooseNewPresident = createAction('room/CHOOSE_NEW_PRESIDENT')\r\nexport const syncRoomData = createAction('room/SYNC_ROOM_DATA')\r\nexport const increasePolicyCount = createAction('room/INCREASE_POLICY_COUNT')\r\nexport const setPoliciesCount = createAction('room/SET_POLICY_COUNTS')\r\nexport const increaseTracker = createAction('room/INCREASE_TRACKER')\r\nexport const resetTracker = createAction('room/RESET_TRACKER')\r\nexport const revealFacists = createAction('room/REVEAL_FACISTS')\r\nexport const registerVote = createAction('room/REGISTER_VOTE')\r\nexport const resetVotes = createAction('room/RESET_VOTES')\r\nexport const revealVotes = createAction('room/REVEAL_VOTES')\r\nexport const killPlayer = createAction('room/KILL_PLAYER')\r\nexport const clearRoom = createAction('room/CLEAR_ROOM')\r\nexport const setWaitTime = createAction('room/SET_WAIT_TIME')\r\nexport const setVeto = createAction('room/SET_VETO')\r\nexport const setBoardType = createAction('room/SET_BOARD_TYPE')\r\n\r\nconst initialState = {\r\n    maxPlayers: 0,\r\n    ownerName: '',\r\n    playersDict: {},\r\n    gamePhase: '',\r\n    potentialChancellorsChoices: [],\r\n    facistPoliciesCount: 0,\r\n    liberalPoliciesCount: 0,\r\n    trackerPosition: 0,\r\n    votes: null,\r\n    waitTime: 0,\r\n    isVetoUnlocked: false,\r\n    boardType: null,\r\n}\r\n\r\nconst actions = {\r\n    [addPlayer]: (state, action) => {\r\n        const { player } = action.payload\r\n        const { playersDict } = state\r\n\r\n        return {\r\n            ...state,\r\n            playersDict: { ...playersDict, [player.playerName]: player },\r\n        }\r\n    },\r\n    [removePlayer]: (state, action) => {\r\n        const { playerName } = action.payload\r\n        const newPlayersDict = { ...state.playersDict }\r\n        delete newPlayersDict[playerName]\r\n\r\n        return {\r\n            ...state,\r\n            playersDict: newPlayersDict,\r\n        }\r\n    },\r\n    [syncRoomData]: (state, action) => {\r\n        const { maxPlayers, ownerName, trackerPosition, playersDict, gamePhase } = action.payload\r\n\r\n        return {\r\n            ...state,\r\n            maxPlayers,\r\n            trackerPosition,\r\n            playersDict,\r\n            gamePhase,\r\n            ownerName,\r\n        }\r\n    },\r\n    [changeGamePhase]: (state, action) => {\r\n        const { gamePhase } = action.payload\r\n\r\n        return {\r\n            ...state,\r\n            gamePhase,\r\n        }\r\n    },\r\n    [chooseNewChancellor]: (state, action) => {\r\n        const { newChancellor } = action.payload\r\n        const newPlayersDict = { ...state.playersDict }\r\n\r\n        const previousChancellor = find(newPlayersDict, { role: PlayerRole.ROLE_PREVIOUS_CHANCELLOR })\r\n        if (previousChancellor) {\r\n            previousChancellor.role = null\r\n        }\r\n        const currentChancellor = find(newPlayersDict, { role: PlayerRole.ROLE_CHANCELLOR })\r\n        if (currentChancellor) {\r\n            currentChancellor.role = PlayerRole.ROLE_PREVIOUS_CHANCELLOR\r\n        }\r\n        const nextChancellor = newPlayersDict[newChancellor]\r\n        nextChancellor.role = PlayerRole.ROLE_CHANCELLOR\r\n\r\n        return {\r\n            ...state,\r\n            playersDict: newPlayersDict,\r\n        }\r\n    },\r\n    [chooseNewPresident]: (state, action) => {\r\n        const { newPresident } = action.payload\r\n        const newPlayersDict = { ...state.playersDict }\r\n\r\n        const previousPresident = find(newPlayersDict, { role: PlayerRole.ROLE_PREVIOUS_PRESIDENT })\r\n        if (previousPresident) {\r\n            previousPresident.role = null\r\n        }\r\n\r\n        const currentPresident = find(newPlayersDict, { role: PlayerRole.ROLE_PRESIDENT })\r\n        if (currentPresident) {\r\n            currentPresident.role = PlayerRole.ROLE_PREVIOUS_PRESIDENT\r\n        }\r\n\r\n        const nextPresident = newPlayersDict[newPresident]\r\n        nextPresident.role = PlayerRole.ROLE_PRESIDENT\r\n\r\n        const previousChancellor = find(newPlayersDict, { role: PlayerRole.ROLE_PREVIOUS_CHANCELLOR })\r\n        if (previousChancellor) {\r\n            previousChancellor.role = null\r\n        }\r\n\r\n        const currentChancellor = find(newPlayersDict, { role: PlayerRole.ROLE_CHANCELLOR })\r\n        if (currentChancellor) {\r\n            currentChancellor.role = PlayerRole.ROLE_PREVIOUS_CHANCELLOR\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            playersDict: newPlayersDict,\r\n        }\r\n    },\r\n\r\n    [increaseTracker]: (state, action) => {\r\n        const position = state.trackerPosition\r\n        return {\r\n            ...state,\r\n            trackerPosition: position + 1,\r\n        }\r\n    },\r\n    [resetTracker]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            trackerPosition: 0,\r\n        }\r\n    },\r\n\r\n    [increasePolicyCount]: (state, action) => {\r\n        const { facistPoliciesCount, liberalPoliciesCount } = state\r\n        const { isFacist } = action.payload\r\n\r\n        if (isFacist) {\r\n            return {\r\n                ...state,\r\n                facistPoliciesCount: facistPoliciesCount + 1,\r\n            }\r\n        }\r\n        return {\r\n            ...state,\r\n            liberalPoliciesCount: liberalPoliciesCount + 1,\r\n        }\r\n    },\r\n    [setPoliciesCount]: (state, { payload: { facist, liberal } }) => ({\r\n        ...state,\r\n        facistPoliciesCount: (isNil(facist) ? state.facistPoliciesCount : facist),\r\n        liberalPoliciesCount: (isNil(liberal) ? state.liberalPoliciesCount : liberal),\r\n    }),\r\n    [revealFacists]: (state, action) => {\r\n        const { facists } = action.payload\r\n\r\n        const newPlayersDict = cloneDeep(state.playersDict)\r\n        forEach(facists, (facist) => {\r\n            const player = newPlayersDict[facist.playerName]\r\n            if (player) {\r\n                player.affiliation = facist.affiliation\r\n                player.facistAvatar = facist.facistAvatar\r\n            }\r\n        })\r\n        return {\r\n            ...state,\r\n            playersDict: newPlayersDict,\r\n        }\r\n    },\r\n    [registerVote]: (state, action) => {\r\n        const { votes } = state\r\n        const { playerName } = action.payload\r\n\r\n        return {\r\n            ...state,\r\n            votes: { ...votes, [playerName]: '' },\r\n        }\r\n    },\r\n    [revealVotes]: (state, action) => {\r\n        const { newVotes } = action.payload\r\n        return {\r\n            ...state,\r\n            votes: newVotes,\r\n        }\r\n    },\r\n    [killPlayer]: (state, action) => {\r\n        const { playerName } = action.payload\r\n\r\n        const newPlayersDict = cloneDeep(state.playersDict)\r\n        newPlayersDict[playerName].isDead = true\r\n        return {\r\n            ...state,\r\n            playersDict: newPlayersDict,\r\n        }\r\n    },\r\n    [resetVotes]: state => {\r\n        return {\r\n            ...state,\r\n            votes: null,\r\n        }\r\n    },\r\n    [clearRoom]: () => initialState,\r\n    [setWaitTime]: (state, { payload: { waitTime } }) => ({\r\n        ...state,\r\n        waitTime,\r\n    }),\r\n    [setVeto]: (state, { payload: { value } }) => ({\r\n        ...state,\r\n        isVetoUnlocked: value,\r\n    }),\r\n    [setBoardType]: (state, { payload: { newBoardType } }) => ({\r\n        ...state,\r\n        boardType: newBoardType,\r\n    }),\r\n}\r\n\r\nexport default handleActions(actions, initialState)\r\n","import { handleActions, createAction } from 'redux-actions'\nimport { reject } from 'lodash'\nimport { MessagesTypes } from '../../Dictionary'\n\n// Actions\nconst addNotification = createAction('info/ADD_NOTIFICATION')\nconst deleteNotification = createAction('info/DELETE_NOTIFICATION')\n\nconst initialState = {\n    currentID: 0,\n    notifications: [],\n    statusNotification: null,\n}\n\nconst actions = {\n    [addNotification]: (state, action) => {\n        const { notifications, currentID } = state\n        const { type, message, values } = action.payload\n        const newID = currentID + 1\n\n        const newNotification = {\n            id: newID,\n            type,\n            message,\n        }\n\n        return {\n            ...state,\n            currentID: newID,\n            ...(\n                type === MessagesTypes.STATUS\n                    ? { statusNotification: {\n                            ...newNotification,\n                            values,\n                        }\n                    } : {\n                        notifications: [\n                            ...notifications,\n                            newNotification,\n                        ],\n                    }\n            ),\n        }\n    },\n    [deleteNotification]: (state, action) => {\n        const { notifications } = state\n        const id = action.payload\n        const newNotifications = reject(notifications, ['id', id])\n        return {\n            ...state,\n            notifications: newNotifications,\n        }\n    },\n\n}\n\nexport { addNotification, deleteNotification }\nexport default handleActions(actions, initialState)\n","import { handleActions, createAction } from 'redux-actions'\n\n// Actions\nconst setChoiceMode = createAction('players/SET_CHOICE_MODE')\nconst setChooserPlayer = createAction('players/SET_CHOOSER_PLAYER')\nconst hideChoiceMode = createAction('players/HIDE_CHOICE_MODE')\n\nconst initialState = {\n    choiceMode: {\n        isVisible: false,\n        context: '',\n        selectablePlayers: [],\n        chooserPlayerName: '',\n    },\n}\n\nconst actions = {\n    [setChoiceMode]: (state, action) => {\n        const { choiceMode } = state\n        const { isVisible = true, context, selectablePlayers } = action.payload\n        return {\n            ...state,\n            choiceMode: {\n                ...choiceMode,\n                isVisible,\n                context,\n                selectablePlayers,\n            },\n        }\n    },\n    [setChooserPlayer]: (state, action) => {\n        const { choiceMode } = state\n        const { playerName } = action.payload\n\n        return {\n            ...state,\n            choiceMode: {\n                ...choiceMode,\n                chooserPlayerName: playerName,\n            },\n        }\n    },\n    [hideChoiceMode]: state => ({\n        ...state,\n        choiceMode: initialState.choiceMode,\n    }),\n}\n\nexport { setChoiceMode, setChooserPlayer, hideChoiceMode }\nexport default handleActions(actions, initialState)\n","import { handleActions, createAction } from 'redux-actions'\n\n// Actions\nconst setModal = createAction('modal/SET_MODAL')\nconst toggleModal = createAction('modal/TOGGLE_MODAL')\n\nconst initialState = {\n    isVisible: false,\n    title: '',\n    overlayClosesModal: false,\n    isCloseButtonShown: false,\n    isOverlayOpaque: false,\n    componentName: '',\n    modalTmpData: {},\n}\n\nconst actions = {\n    [setModal]: (state, action) => {\n        const { isVisible = true, title, overlayClosesModal = false, isCloseButtonShown = false, isOverlayOpaque = false, componentName, initialData } = action.payload\n        return {\n            isVisible,\n            title,\n            overlayClosesModal,\n            isCloseButtonShown,\n            isOverlayOpaque,\n            componentName,\n            modalTmpData: initialData,\n        }\n    },\n    [toggleModal]: (state, action) => {\n        const { value } = action.payload\n        return {\n            ...state,\n            isVisible: value,\n        }\n    },\n}\n\nexport { setModal, toggleModal }\nexport default handleActions(actions, initialState)\n","import { cloneDeep } from 'lodash'\nimport { handleActions, createAction } from 'redux-actions'\n\n// Actions\nconst syncLobby = createAction('lobby/SYNC_LOBBY')\nconst changePlayerInPlayersList = createAction('lobby/CHANGE_PLAYER_IN_PLAYERS_LIST')\nconst changeRoomInRoomsList = createAction('lobby/CHANGE_ROOM_IN_ROOMS_LIST')\n\nconst initialState = {\n    // playersList has structure: { avatarNumber, playerName, currentRoom }\n    playersList: {},\n    roomsList: {},\n}\n\nconst actions = {\n    [syncLobby]: (state, { payload: { players, rooms } }) => ({\n        ...state,\n        playersList: players,\n        roomsList: rooms,\n    }),\n\n    // passing empty player results in player removal from list\n    [changePlayerInPlayersList]: (state, action) => {\n        const { player, playerName } = action.payload\n        const newPlayersList = cloneDeep(state.playersList)\n        if (playerName && player) {\n            newPlayersList[playerName] = player\n        } else {\n            delete newPlayersList[playerName]\n        }\n        return {\n            ...state,\n            playersList: newPlayersList,\n        }\n    },\n\n    // passing empty room results in room removal from list\n    [changeRoomInRoomsList]: (state, action) => {\n        const { room, roomName } = action.payload\n        const newRoomsList = cloneDeep(state.roomsList)\n        if (roomName && room) {\n            newRoomsList[roomName] = room\n        } else {\n            delete newRoomsList[roomName]\n        }\n        return {\n            ...state,\n            roomsList: newRoomsList,\n        }\n    },\n}\n\nexport { syncLobby, changePlayerInPlayersList, changeRoomInRoomsList }\nexport default handleActions(actions, initialState)\n","import { combineReducers } from 'redux'\nimport { createAction } from 'redux-actions'\nimport { routerReducer } from 'react-router-redux'\n\nimport chat from './chatDuck'\nimport user from './userDuck'\nimport room from './roomDuck'\nimport notification from './notificationsDuck'\nimport players from './playersDuck'\nimport modal from './modalDuck'\nimport lobby from './lobbyDuck'\n\nconst LOGOUT_USER = 'root/USER_LOGOUT'\n\n// Actions\nexport const logoutUser = createAction(LOGOUT_USER)\n\nconst appReducer = combineReducers({\n    chat,\n    user,\n    room,\n    notification,\n    players,\n    modal,\n    lobby,\n    routing: routerReducer,\n})\n\nexport const rootReducer = (state, action) => {\n    if (action.type === LOGOUT_USER) {\n        return appReducer(undefined, action)\n    }\n\n    return appReducer(state, action)\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'react-router-redux'\nimport thunk from 'redux-thunk'\nimport { createBrowserHistory } from 'history'\nimport { rootReducer } from './ducks/rootDuck'\n\n/* eslint-disable no-underscore-dangle */\nexport const history = createBrowserHistory()\nconst router = routerMiddleware(history)\n\nexport const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    compose(\n        applyMiddleware(thunk),\n        applyMiddleware(router),\n    ),\n)\n/* eslint-enable */\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport fontAwesome from 'font-awesome/css/font-awesome.css'\n\nconst Icon = ({ onClick, className, name }) => (\n    <i className={classNames(fontAwesome.fa, fontAwesome[name], className)} onClick={onClick} />\n)\n\nIcon.displayName = 'Icon'\nIcon.propTypes = {\n    name: PropTypes.string.isRequired,\n    onClick: PropTypes.func,\n    className: PropTypes.string,\n}\n\nexport default Icon\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { map } from 'lodash'\n\nimport { Views } from '../../../Dictionary'\nimport { Icon } from '../Shared/Icon'\n\nimport styles from './Header.css'\n\nconst HeaderComponent = ({\n    setView,\n    currentView,\n    isLobbyVisible,\n    isMobileNavOpen,\n    openMobileNavigation,\n    closeMobileNavigation,\n}) => {\n    const renderNavigationLink = (label, key) => {\n        const onNavClick = () => {\n            setView(key)\n            closeMobileNavigation()\n        }\n        return (\n            <span\n                key={key}\n                className={classNames({ active: currentView === key })}\n                onClick={onNavClick}\n            >\n                {label}\n            </span>\n        )\n    }\n\n    const views = {\n        [Views.Home]: 'Home',\n        [Views.Lobby]: 'Lobby',\n        [Views.HowToPlay]: 'How to play',\n        [Views.News]: 'News',\n        [Views.About]: 'About',\n    }\n    if (!isLobbyVisible) {\n        delete views[Views.Lobby]\n    }\n\n    const headerNavigationClasses = classNames(styles.headerNavigation, { [styles.isOpen]: isMobileNavOpen })\n    const menuIconClasses = classNames({ 'fa-bars': !isMobileNavOpen, 'fa-times': isMobileNavOpen })\n\n    return (\n        <div className={styles.headerContainer}>\n            <div className={styles.header}>\n                <span className={styles.appName} onClick={closeMobileNavigation}>Secret Hitler</span>\n                <div className={headerNavigationClasses}>\n                    <Icon\n                        name={menuIconClasses}\n                        onClick={isMobileNavOpen ? closeMobileNavigation : openMobileNavigation}\n                        className={styles.menuIcon}\n                    />\n                    <div className={styles.headerNavigationLinks}>\n                        {map(views, renderNavigationLink)}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nHeaderComponent.propTypes = {\n    setView: PropTypes.func.isRequired,\n    isLobbyVisible: PropTypes.bool.isRequired,\n    currentView: PropTypes.string,\n    isMobileNavOpen: PropTypes.bool,\n    openMobileNavigation: PropTypes.func,\n    closeMobileNavigation: PropTypes.func,\n}\n\nexport default HeaderComponent\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { setView } from '../../ducks/userDuck'\nimport HeaderComponent from './HeaderComponent'\n\nexport class Header extends React.PureComponent {\n    static propTypes = {\n        setView: PropTypes.func.isRequired,\n        currentView: PropTypes.string,\n        userName: PropTypes.string,\n    }\n\n    state = {\n        isMobileNavOpen: false,\n    }\n\n    setNewView = (newView) => {\n        this.props.setView({ viewName: newView })\n    }\n\n    openMobileNavigation = () => {\n        this.setState({ isMobileNavOpen: true })\n    }\n\n    closeMobileNavigation = () => {\n        this.setState({ isMobileNavOpen: false })\n    }\n\n    render() {\n        const { currentView, userName } = this.props\n        const { isMobileNavOpen } = this.state\n        const shouldDisplayLobbyNav = (!!userName)\n        return (\n            <HeaderComponent\n                setView={this.setNewView}\n                currentView={currentView}\n                isLobbyVisible={shouldDisplayLobbyNav}\n                isMobileNavOpen={isMobileNavOpen}\n                openMobileNavigation={this.openMobileNavigation}\n                closeMobileNavigation={this.closeMobileNavigation}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ user: { currentView, userName } }) => ({\n    currentView,\n    userName,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setView: payload => dispatch(setView(payload)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import Liberal1 from '../static/Avatar1.png'\nimport Liberal2 from '../static/Avatar2.png'\nimport Liberal3 from '../static/Avatar3.png'\nimport Liberal4 from '../static/Avatar4.png'\nimport Liberal5 from '../static/Avatar5.png'\nimport Liberal6 from '../static/Avatar6.png'\n\nimport Fascist21 from '../static/Avatar21.png'\nimport Fascist50 from '../static/Avatar50.png'\n\nconst avatarMapping = {\n    'liberal-1': Liberal1,\n    'liberal-2': Liberal2,\n    'liberal-3': Liberal3,\n    'liberal-4': Liberal4,\n    'liberal-5': Liberal5,\n    'liberal-6': Liberal6,\n    'fascist-21': Fascist21,\n    'fascist-50': Fascist50,\n}\n\nexport const getAvatar = avatarKey => avatarMapping[avatarKey] || ''\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport styles from './Button.css'\n\nconst Button = (props) => {\n    const { className, children } = props\n    return (\n        <div\n            role=\"button\"\n            tabIndex=\"0\"\n            {...props}\n            className={classNames(styles.btn, className)}\n        >\n            {children}\n        </div>\n    )\n}\n\nButton.displayName = 'Button'\nButton.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    className: PropTypes.string,\n}\n\nexport default Button\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { Button } from '..'\n\nimport styles from './PrimaryButton.css'\n\nconst PrimaryButton = (props) => {\n    const { className, children } = props\n    return (\n        <Button\n            {...props}\n            className={classNames(styles.primary, className)}\n        >\n            {children}\n        </Button>\n    )\n}\n\nPrimaryButton.displayName = 'PrimaryButton'\nPrimaryButton.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    className: PropTypes.string,\n}\n\nexport default PrimaryButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { Button } from '..'\n\nimport styles from './FancyButton.css'\n\nconst FancyButton = (props) => {\n    const { className, children } = props\n    return (\n        <Button\n            {...props}\n            className={classNames(styles.fabulousButton, styles.linedThick, className)}\n        >\n            {children}\n        </Button>\n    )\n}\n\nFancyButton.displayName = 'FancyButton'\nFancyButton.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n    className: PropTypes.string,\n}\n\nexport default FancyButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { Button } from '..'\n\nimport styles from './ControlButton.css'\n\nconst ControlButton = (props) => {\n    const { className, children } = props\n    return (\n        <Button\n            {...props}\n            className={classNames(styles.control, className)}\n        >\n            <span className={styles.buttonText}>{children}</span>\n        </Button>\n    )\n}\n\nControlButton.displayName = 'ControlButton'\nControlButton.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n}\n\nexport default ControlButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getAvatar } from '../../utils/avatarsHelper'\nimport { ControlButton } from '../Shared/Buttons'\n\nimport styles from './LoginPage.css'\n\nconst LoginPageComponent = ({\n    onSetNameClick,\n    setInputRef,\n    onInputChange,\n    userName,\n    onNameReset,\n}) => {\n    const avatar2 = getAvatar('liberal-2')\n    const avatar3 = getAvatar('liberal-3')\n    return (\n        <div className={styles.loginPage}>\n            <div className={styles.loginFormContainer}>\n                <div className={styles.loginForm}>\n                    {!userName && (\n                        <div>\n                            <div className={styles.loginInputGroup}>\n                                <input\n                                    ref={setInputRef}\n                                    type=\"text\"\n                                    name=\"firstname\"\n                                    placeholder=\"\"\n                                    onKeyPress={onInputChange}\n                                    autoFocus\n                                />\n                                <ControlButton onClick={onSetNameClick}>Log in</ControlButton>\n                            </div>\n                            <p className={styles.formText}>\n                                Get right in the game by typing in your desired nickname.\n                            </p>\n                        </div>\n                    )}\n                    {userName && (\n                        <div className={styles.formText}>\n                            <div>You are currently logged as<span className={styles.userName}>{` ${userName}`}</span></div>\n                            <div>Click <span className={styles.changeNickname} onClick={onNameReset}>here</span> to change nickname</div>\n                        </div>\n                    )}\n\n                    <div className={styles.formText}>\n                        <p>\n                            Rto soluta numquam et, eu vix paulo bonorum.\n                            Id vidit etiam argumentum mea. Mundi virtute eu vim,\n                            vel at stet lorem delectus, phaedrum adipisci eum et.\n                        </p>\n                    </div>\n                </div>\n            </div>\n            <img src={avatar3} alt=\"avatar\" className={styles.homeImageLarge} />\n            <img src={avatar2} alt=\"avatar\" className={styles.homeImageSmall} />\n            <div className={styles.homeContent}>\n\n            </div>\n        </div>\n    )\n}\n\nLoginPageComponent.propTypes = {\n    userName: PropTypes.string,\n    onSetNameClick: PropTypes.func,\n    setInputRef: PropTypes.func,\n    onInputChange: PropTypes.func,\n    onNameReset: PropTypes.func,\n}\nexport default LoginPageComponent\n","import IO from 'socket.io-client'\r\nimport React from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    SocketEvents,\r\n    GamePhases,\r\n    ChoiceModeContexts,\r\n    PlayerAffilications,\r\n    PolicyCards,\r\n    MessagesTypes,\r\n    Views,\r\n} from '../../Dictionary'\r\nimport { store } from '../store'\r\nimport * as roomActions from '../ducks/roomDuck'\r\nimport * as modalActions from '../ducks/modalDuck'\r\nimport * as userActions from '../ducks/userDuck'\r\nimport * as lobbyActions from '../ducks/lobbyDuck'\r\nimport { setChoiceMode, setChooserPlayer, hideChoiceMode } from '../ducks/playersDuck'\r\nimport { addMessage, clearChat } from '../ducks/chatDuck'\r\nimport { addNotification } from '../ducks/notificationsDuck'\r\nimport { logoutUser } from '../ducks/rootDuck'\r\n\r\nexport let socket = {}\r\n\r\nexport class SocketHandler extends React.PureComponent {\r\n    componentDidMount() {\r\n        socket = IO()\r\n        socket.on(SocketEvents.CLIENT_GET_ROOM_DATA, (payload) => {\r\n            this.props.roomActions.syncRoomData(payload.data)\r\n            if (payload.data.gamePhase === GamePhases.Paused) {\r\n                this.props.modalActions.setModal({\r\n                    title: 'The game in this room has been paused by the owner',\r\n                    isOverlayOpaque: true,\r\n                    componentName: 'HaltModal',\r\n                    initialData: { hasGameEnded: false },\r\n                })\r\n            }\r\n        })\r\n        socket.on(SocketEvents.AllowEnteringRoom, (payload) => {\r\n            const { roomName } = payload.data\r\n            this.switchRooms(roomName)\r\n        })\r\n        socket.on(SocketEvents.ServerWaitingForVeto, (payload) => {\r\n            this.props.roomActions.setVeto({ value: true })\r\n        })\r\n        socket.on(SocketEvents.CLIENT_JOIN_ROOM, (payload) => {\r\n            const { player, timestamp } = payload.data\r\n            player.affiliation = PlayerAffilications.LIBERAL_AFFILIATION\r\n            this.props.roomActions.addPlayer({ player })\r\n        })\r\n        socket.on(SocketEvents.CLIENT_LEAVE_ROOM, (payload) => {\r\n            const { playerName, timestamp } = payload.data\r\n            this.props.roomActions.removePlayer({ playerName })\r\n\r\n            this.props.roomActions.changeGamePhase({ gamePhase: GamePhases.Paused })\r\n            this.cancelEveryGameChoice()\r\n        })\r\n        socket.on(SocketEvents.CLIENT_SEND_MESSAGE, (payload) => {\r\n            this.props.chatActions.addMessage(payload.data)\r\n        })\r\n        socket.on(SocketEvents.ClientGameNotification, (payload) => {\r\n            const { type, message, values } = payload.data\r\n            this.props.notificationsActions.addNotification({ type, message, values })\r\n        })\r\n        socket.on(SocketEvents.VOTING_PHASE_START, (payload) => {\r\n            const { chancellorCandidate, timestamp } = payload.data\r\n            this.props.roomActions.changeGamePhase({ gamePhase: GamePhases.GAME_PHASE_VOTING })\r\n            this.cancelEveryGameChoice()\r\n\r\n            if (!this.props.playersDict[this.props.userName].isDead) {\r\n                this.props.modalActions.setModal({\r\n                    title: 'Vote for your parliment!',\r\n                    initialData: {\r\n                        chancellorCandidate,\r\n                    },\r\n                    componentName: 'VotingModal',\r\n                })\r\n            }\r\n        })\r\n        socket.on(SocketEvents.START_GAME, (payload) => {\r\n            const { boardType } = payload.data\r\n            this.props.roomActions.changeGamePhase({ gamePhase: GamePhases.START_GAME })\r\n            this.props.roomActions.setBoardType({ newBoardType: boardType })\r\n        })\r\n        socket.on(SocketEvents.VOTING_PHASE_REVEAL, (payload) => {\r\n            const { newChancellor } = payload.data\r\n            if (newChancellor) {\r\n                this.props.roomActions.chooseNewChancellor({ newChancellor })\r\n            }\r\n        })\r\n        socket.on(SocketEvents.CHANCELLOR_CHOICE_PHASE, (payload) => {\r\n            const { presidentName, playersChoices } = payload.data\r\n\r\n            this.props.roomActions.chooseNewPresident({ newPresident: presidentName })\r\n            this.props.roomActions.setVeto({ value: false })\r\n            this.props.roomActions.resetVotes()\r\n            this.props.roomActions.changeGamePhase({ gamePhase: GamePhases.GAME_PHASE_CHANCELLOR_CHOICE })\r\n            this.props.playersActions.setChooserPlayer({ playerName: presidentName })\r\n            if (presidentName === this.props.userName) {\r\n                this.props.playersActions.setChoiceMode({\r\n                    context: ChoiceModeContexts.ChancellorChoice,\r\n                    selectablePlayers: playersChoices,\r\n                })\r\n            }\r\n        })\r\n        socket.on(SocketEvents.BECOME_FACIST, (payload) => {\r\n            const { facists } = payload.data\r\n            this.props.roomActions.revealFacists({ facists })\r\n        })\r\n        socket.on(SocketEvents.VOTING_PHASE_NEWVOTE, (payload) => {\r\n            const { playerName } = payload.data\r\n            this.props.roomActions.registerVote({ playerName })\r\n        })\r\n        socket.on(SocketEvents.VOTING_PHASE_REVEAL, (payload) => {\r\n            const { votes } = payload.data\r\n            this.props.roomActions.revealVotes({ newVotes: votes })\r\n        })\r\n\r\n        socket.on(SocketEvents.IncreaseTrackerPosition, (payload) => {\r\n            this.props.roomActions.increaseTracker()\r\n        })\r\n\r\n        socket.on(SocketEvents.KillSuperpowerUsed, (payload) => {\r\n            const { presidentName, playersChoices, timestamp } = payload.data\r\n            this.props.roomActions.changeGamePhase({ gamePhase: GamePhases.GAME_PHASE_SUPERPOWER })\r\n            // TODO: Put logic related to president choose into other Event\r\n            if (presidentName === this.props.userName) {\r\n                this.props.playersActions.setChoiceMode({\r\n                    context: ChoiceModeContexts.KillChoice,\r\n                    selectablePlayers: playersChoices,\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on(SocketEvents.DesignateNextPresident, (payload) => {\r\n            const { presidentName, playersChoices, timestamp } = payload.data\r\n            this.props.roomActions.changeGamePhase({ gamePhase: GamePhases.DesignateNextPresidentPhase })\r\n            this.props.playersActions.setChooserPlayer({ playerName: presidentName })\r\n            if (presidentName === this.props.userName) {\r\n                this.props.playersActions.setChoiceMode({\r\n                    context: ChoiceModeContexts.DesignateNextPresidentChoice,\r\n                    selectablePlayers: playersChoices,\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on(SocketEvents.PlayerKilled, (payload) => {\r\n            const { playerName } = payload.data\r\n            this.props.roomActions.killPlayer({ playerName })\r\n        })\r\n        socket.on(SocketEvents.PlayerKicked, (payload) => {\r\n            const { playerName, isOverlaysHidingNeeded, wasBanned, timestamp } = payload.data\r\n\r\n            if (this.props.userName === playerName) {\r\n                const message = `You have been ${wasBanned ? 'banned' : 'kicked'} by the owner of the room!`\r\n                this.props.notificationsActions.addNotification({ type: MessagesTypes.ERROR, message })\r\n                this.props.roomActions.clearRoom()\r\n                this.switchRooms('')\r\n                this.cancelEveryGameChoice()\r\n                return\r\n            }\r\n            const message = `${playerName} has been ${wasBanned ? 'banned' : 'kicked'} by the owner`\r\n            this.props.chatActions.addMessage({ timestamp, content: message })\r\n            this.props.roomActions.removePlayer({ playerName })\r\n            this.props.roomActions.changeGamePhase({ gamePhase: GamePhases.Paused })\r\n\r\n            if (isOverlaysHidingNeeded) this.cancelEveryGameChoice()\r\n            this.props.modalActions.setModal({\r\n                title: message,\r\n                isOverlayOpaque: true,\r\n                componentName: 'HaltModal',\r\n                initialData: { hasGameEnded: false },\r\n            })\r\n        })\r\n\r\n        socket.on(SocketEvents.GameFinished, (payload) => {\r\n            const { whoWon, facists } = payload.data\r\n  \r\n            this.props.roomActions.revealFacists({ facists })\r\n\r\n            if (!whoWon) {\r\n                this.props.modalActions.setModal({\r\n                    title: 'The game abruptly ended',\r\n                    isOverlayOpaque: true,\r\n                    componentName: 'GameEndModal',\r\n                })\r\n                return\r\n            }\r\n\r\n            const wonText = whoWon === PlayerAffilications.LIBERAL_AFFILIATION ? 'Liberals won!' : 'Fascist won!'\r\n            this.props.modalActions.setModal({\r\n                title: wonText,\r\n                componentName: 'WinningModal',\r\n                initialData: { whoWon },\r\n            })\r\n        })\r\n\r\n        socket.on(SocketEvents.CLIENT_ERROR, (payload) => {\r\n            const { error } = payload\r\n            this.props.notificationsActions.addNotification({ type: MessagesTypes.ERROR,  message: error })\r\n        })\r\n\r\n        socket.on(SocketEvents.ResetTracker, (payload) => {\r\n            const trackerPositionBeforeReset = this.props.room.trackerPosition\r\n            if (trackerPositionBeforeReset === 3) {\r\n                this.props.roomActions.increaseTracker()\r\n\r\n                // time of delay must be greater that time of an animation of tracker beeing moved\r\n                setTimeout(() => {\r\n                    this.props.roomActions.resetTracker()\r\n                }, 4000)\r\n            } else {\r\n                this.props.roomActions.resetTracker()\r\n            }\r\n        })\r\n\r\n        socket.on(SocketEvents.ChoosePolicy, ({ data: { policyCards, title } }) => {\r\n            this.props.modalActions.setModal({\r\n                title,\r\n                initialData: {\r\n                    policies: policyCards,\r\n                },\r\n                componentName: 'PolicyChoiceModal',\r\n            })\r\n        })\r\n\r\n        socket.on(SocketEvents.PresidentChoosePolicy, ({ data: { timestamp, presidentName, gamePhase } }) => {\r\n            this.props.roomActions.changeGamePhase({ gamePhase })\r\n            this.props.playersActions.setChooserPlayer({ playerName: presidentName })\r\n            this.props.roomActions.resetVotes()\r\n        })\r\n\r\n        socket.on(SocketEvents.ChancellorChoosePolicy, ({ data: { timestamp, chancellorName } }) => {\r\n            this.props.playersActions.setChooserPlayer({ playerName: chancellorName })\r\n        })\r\n\r\n        socket.on(SocketEvents.NewPolicy, ({ data: { policy } }) => {\r\n            const isFacist = policy === PolicyCards.FacistPolicy\r\n            this.props.playersActions.setChooserPlayer({ playerName: '' })\r\n            this.props.roomActions.increasePolicyCount({ isFacist })\r\n        })\r\n\r\n        socket.on(SocketEvents.SyncPolicies, ({ data: { facist, liberal } }) => {\r\n            this.props.roomActions.setPoliciesCount({ facist, liberal })\r\n        })\r\n\r\n        socket.on(SocketEvents.SelectName, ({ data: { userName } }) => {\r\n            this.props.chatActions.clearChat()\r\n            if (userName) {\r\n                this.props.userActions.selectName({ userName })\r\n                this.props.userActions.setView({ viewName: Views.Lobby })\r\n            } else {\r\n                this.props.userActions.selectName({ userName: '' })\r\n                this.props.userActions.setView({ viewName: Views.Home })\r\n            }\r\n        })\r\n\r\n        socket.on(SocketEvents.SyncLobby, ({ data: { players, rooms } }) => {\r\n          this.props.lobbyActions.syncLobby({ players, rooms })\r\n        })\r\n\r\n        socket.on(SocketEvents.PlayersListChanged, ({ data: { player, playerName } }) => {\r\n            this.props.lobbyActions.changePlayerInPlayersList({ player, playerName })\r\n        })\r\n\r\n        socket.on(SocketEvents.RoomsListChanged, ({ data: { room, roomName } }) => {\r\n            this.props.lobbyActions.changeRoomInRoomsList({ room, roomName })\r\n        })\r\n        socket.on(SocketEvents.SetTimer, ({ data: { waitTime } }) => {\r\n            this.props.roomActions.setWaitTime({ waitTime })\r\n        })\r\n\r\n        socket.on(SocketEvents.SuperpowerAffiliationPeekPlayerChoose, ({ data: { playersChoices } }) => {\r\n            this.props.playersActions.setChoiceMode({\r\n                context: ChoiceModeContexts.AffiliationPeekChoice,\r\n                selectablePlayers: playersChoices,\r\n            })\r\n        })\r\n        socket.on(SocketEvents.SuperpowerAffiliationPeekAffiliationReveal, ({ data: { playerInfo } }) => {\r\n            this.props.modalActions.setModal({\r\n                title: 'This is the selected player affiliation',\r\n                isOverlayOpaque: true,\r\n                componentName: 'PeekAffiliationModal',\r\n                initialData: { playerInfo },\r\n            })\r\n        })\r\n        socket.on(SocketEvents.PeekCards, ({ data: { cards } }) => {\r\n            this.props.modalActions.setModal({\r\n                title: 'Those are the cards the next president will draw',\r\n                initialData: {\r\n                    policies: cards,\r\n                    selectable: false,\r\n                },\r\n                componentName: 'PolicyChoiceModal',\r\n            })\r\n        })\r\n        socket.on(SocketEvents.SetChooserPlayer, ({ data: { playerName } }) => {\r\n            this.props.playersActions.setChooserPlayer({ playerName })\r\n        })\r\n        socket.on(SocketEvents.logoutPlayer, ({ data: { message } }) => {\r\n            this.props.rootActions.logoutUser()\r\n            this.props.notificationsActions.addNotification({ type: MessagesTypes.ERROR, message: message || 'You have been logged out!' })\r\n        })\r\n    }\r\n\r\n    switchRooms = (targetRoomName) => {\r\n        this.props.chatActions.clearChat()\r\n        this.props.userActions.setRoomName({ roomName: targetRoomName || '' })\r\n        this.props.userActions.setView({ viewName: (targetRoomName ? Views.Game : Views.Lobby) })\r\n    }\r\n\r\n    cancelEveryGameChoice = () => {\r\n        this.props.playersActions.setChooserPlayer({ playerName: '' })\r\n        this.props.playersActions.hideChoiceMode()\r\n        if (this.props.gamePhase !== GamePhases.Paused) this.props.modalActions.toggleModal({ value: false })\r\n    }\r\n\r\n\r\n    render() {\r\n        return null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ user, room }) => {\r\n    return {\r\n        room,\r\n        userName: user.userName,\r\n        playersDict: room.playersDict,\r\n        trackerPosition: room.trackerPosition,\r\n        gamePhase: room.gamePhase,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        roomActions: bindActionCreators(roomActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        chatActions: bindActionCreators({ addMessage, clearChat }, dispatch),\r\n        playersActions: bindActionCreators({ setChoiceMode, setChooserPlayer, hideChoiceMode }, dispatch),\r\n        modalActions: bindActionCreators(modalActions, dispatch),\r\n        notificationsActions: bindActionCreators({ addNotification }, dispatch),\r\n        lobbyActions: bindActionCreators(lobbyActions, dispatch),\r\n        rootActions: bindActionCreators({ logoutUser }, dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SocketHandler)\r\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { SocketEvents } from '../../../Dictionary'\nimport LoginPageComponent from './LoginPageComponent'\nimport { socket } from '../../utils/SocketHandler'\n\nexport class LoginPage extends React.PureComponent {\n    static propTypes = {\n        // redux\n        userName: PropTypes.string,\n        userActions: PropTypes.objectOf(PropTypes.func),\n    }\n\n    constructor(props) {\n        super(props)\n        this.inputRef = null\n    }\n\n    /**\n     * Function that handles enter press\n     */\n    onInputChange = (event) => {\n        if (event.key === 'Enter') {\n            this.setName()\n        }\n    }\n\n    setInputRef = (inpRef) => {\n        this.inputRef = inpRef\n    }\n\n    resetName = () => {\n        socket.emit(SocketEvents.SelectName, { userName: '' })\n    }\n\n    setName = () => {\n        const name = this.inputRef.value\n        socket.emit(SocketEvents.SelectName, { userName: name })\n    }\n\n    render() {\n        const { userName } = this.props\n        return (\n            <LoginPageComponent\n                onSetNameClick={this.setName}\n                setInputRef={this.setInputRef}\n                onInputChange={this.onInputChange}\n                userName={userName}\n                onNameReset={this.resetName}\n            />\n        )\n    }\n}\nconst mapStateToProps = ({ user: { userName } }) => ({\n    userName,\n})\nexport default connect(mapStateToProps)(LoginPage)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { GamePhases } from '../../../../Dictionary'\nimport { ControlButton } from '../../Shared/Buttons'\nimport { Icon } from '../../Shared/Icon'\n\nimport styles from './GameControls.css'\n\nconst renderButton = (label, onClick) => (\n    <ControlButton key={label} onClick={onClick}>{label}</ControlButton>\n)\n\nconst GameControlsComponent = ({\n    onStartGame,\n    onKickPlayer,\n    onBanPlayer,\n    onShowAffiliationClick,\n    isOwner,\n    gamePhase,\n    isAffiliationHidden,\n}) => {\n    const ownersButtons = [\n        gamePhase === GamePhases.GAME_PHASE_NEW && renderButton('start', onStartGame),\n        renderButton('kick', onKickPlayer),\n        renderButton('ban', onBanPlayer),\n    ]\n\n    return (\n        <div className={styles.gameControls}>\n            <div className={styles.buttons}>\n                <ControlButton onClick={onShowAffiliationClick}>\n                    <span>\n                        roles<Icon name={classNames('fa-fw', isAffiliationHidden ? 'fa-angle-right' : 'fa-angle-left')} className={styles.menuArrowIcon} />\n                    </span>\n                </ControlButton>\n                {isOwner && ownersButtons}\n            </div>\n        </div>\n    )\n}\n\nGameControlsComponent.displayName = 'GameControlsComponent'\nGameControlsComponent.propTypes = {\n    onStartGame: PropTypes.func,\n    onKickPlayer: PropTypes.func,\n    onBanPlayer: PropTypes.func,\n    isOwner: PropTypes.bool,\n    gamePhase: PropTypes.string,\n    onShowAffiliationClick: PropTypes.func,\n    isAffiliationHidden: PropTypes.bool,\n}\nexport default GameControlsComponent\n","import React from 'react';\n\nexport function invokeOnEvery(array, functionToInvoke) {\n    array.forEach(element => functionToInvoke(element))\n}\n","import { map, reject } from 'lodash'\nimport { invokeOnEvery } from '../utils/collectionsHelper'\n\nimport { SocketEvents, ChoiceModeContexts } from '../../Dictionary'\nimport { socket } from '../utils/SocketHandler'\n\nimport { store } from '../store'\nimport { toggleModal } from '../ducks/modalDuck'\nimport * as playersActions from '../ducks/playersDuck'\nimport * as roomActions from '../ducks/roomDuck'\n\nexport function startGame() {\n    socket.emit(SocketEvents.START_GAME)\n    store.dispatch(roomActions.resetTracker())\n}\n\nexport function resumeGame() {\n    socket.emit(SocketEvents.CHANCELLOR_CHOICE_PHASE)\n    store.dispatch(toggleModal({ value: false }))\n}\n\n// TODO\nexport function openInvitePlayersScreen() {\n\n}\n\nexport function startKickPlayerMode() {\n    const { user, room } = store.getState()\n    const playersWithoutOwner = map(reject(room.playersDict, { playerName: user.userName }), 'playerName')\n\n    invokeOnEvery([\n        playersActions.setChooserPlayer({ playerName: user.userName }),\n        playersActions.setChoiceMode({\n            context: ChoiceModeContexts.KickChoice,\n            selectablePlayers: playersWithoutOwner,\n        }),\n    ], store.dispatch)\n}\n\nexport function startBanPlayerMode() {\n    const { user, room } = store.getState()\n    const playersWithoutOwner = map(reject(room.playersDict, { playerName: user.userName }), 'playerName')\n\n    invokeOnEvery([\n        playersActions.setChooserPlayer({ playerName: user.userName }),\n        playersActions.setChoiceMode({\n            context: ChoiceModeContexts.BanChoice,\n            selectablePlayers: playersWithoutOwner,\n        }),\n    ], store.dispatch)\n}\n\nexport function endGame() {\n    socket.emit(SocketEvents.GameFinished)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport GameControlsComponent from './GameControlsComponent'\nimport { toggleAffiliationMenu } from '../../../ducks/userDuck'\nimport { startGame, startKickPlayerMode, startBanPlayerMode } from '../../../gameLogic/ownerActions'\n\nexport class GameControls extends React.PureComponent {\n    static displayName = 'GameControls'\n    static propTypes = {\n        toggleAffiliationMenu: PropTypes.func.isRequired,\n        gamePhase: PropTypes.string,\n        isOwner: PropTypes.bool,\n        isAffiliationHidden: PropTypes.bool,\n    }\n\n    toggleShow = () => {\n        this.props.toggleAffiliationMenu()\n    }\n\n    render() {\n        const { gamePhase, isAffiliationHidden, isOwner } = this.props\n        return (\n            <GameControlsComponent\n                onStartGame={startGame}\n                onKickPlayer={startKickPlayerMode}\n                onBanPlayer={startBanPlayerMode}\n                onShowAffiliationClick={this.toggleShow}\n                isOwner={isOwner}\n                gamePhase={gamePhase}\n                isAffiliationHidden={isAffiliationHidden}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ user, room }) => ({\n    userName: user.userName,\n    isAffiliationHidden: user.isAffiliationHidden,\n    isOwner: room.ownerName === user.userName,\n    gamePhase: room.gamePhase,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleAffiliationMenu: () => dispatch(toggleAffiliationMenu()),\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(GameControls)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { PlayerRole as PlayerRoleDict } from '../../../../../Dictionary'\n\nimport styles from './PlayerRole.css'\n\nconst roleMapping = {\n    [PlayerRoleDict.ROLE_CHANCELLOR]: 'Chancellor',\n    [PlayerRoleDict.ROLE_PRESIDENT]: 'President',\n    [PlayerRoleDict.ROLE_PREVIOUS_CHANCELLOR]: 'P. Chancellor',\n    [PlayerRoleDict.ROLE_PREVIOUS_PRESIDENT]: 'P. President',\n}\n\nconst previousRoles = [PlayerRoleDict.ROLE_PREVIOUS_CHANCELLOR, PlayerRoleDict.ROLE_PREVIOUS_PRESIDENT]\n\nconst PlayerRole = ({ role }) => {\n    if (!role || !roleMapping[role]) {\n        return null\n    }\n\n    const roleName = roleMapping[role]\n    const ribbonNameClassNames = classNames(styles.roleName, {\n        [styles.chancellor]: role === PlayerRoleDict.ROLE_CHANCELLOR,\n        [styles.previous]: previousRoles.includes(role),\n    })\n\n    return (\n        <div className={styles.ribbon}>\n            <span className={ribbonNameClassNames}>\n                {roleName}\n            </span>\n        </div>\n    )\n}\n\nPlayerRole.displayName = 'PlayerRole'\nPlayerRole.propTypes = {\n    role: PropTypes.string,\n}\n\nexport { PlayerRole }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { getAvatar } from '../../../utils/avatarsHelper'\nimport { Icon } from '../../Shared/Icon'\nimport { PlayerRole } from './PlayerRole'\n\nimport styles from './PlayerAvatar.css'\n\nconst PlayerAvatar = ({\n    liberalAvatar,\n    fascistAvatar,\n    isDead,\n    isPlayerWaitedFor,\n    isOwner,\n    role,\n    className,\n}) => {\n    const liberalAvatarPicture = getAvatar(`liberal-${liberalAvatar}`)\n    const fascistAvatarPicture = getAvatar(`fascist-${fascistAvatar}`)\n\n    if (!liberalAvatarPicture) {\n        return null\n    }\n\n    return (\n        <div className={classNames(styles.avatarWrapper, className, { [styles.dead]: isDead })}>\n            {isOwner && <Icon name=\"fa-bolt\" className={styles.ownerIcon} />}\n            {isPlayerWaitedFor && <Icon name=\"fa-clock-o\" className={styles.selectingWaitIcon} />}\n            {fascistAvatar && <img className={classNames(styles.portrait, styles.fascistPortrait)} src={fascistAvatarPicture} alt=\"Player fascist avatar\" />}\n            <img className={styles.portrait} src={liberalAvatarPicture} alt=\"Player liberal avatar\" />\n            {!isDead && <PlayerRole role={role} />}\n        </div>\n    )\n}\n\nPlayerAvatar.displayName = 'PlayerAvatar'\nPlayerAvatar.propTypes = {\n    liberalAvatar: PropTypes.number.isRequired,\n    fascistAvatar: PropTypes.number,\n    isDead: PropTypes.bool,\n    role: PropTypes.string,\n    isPlayerWaitedFor: PropTypes.bool,\n    isOwner: PropTypes.bool,\n    className: PropTypes.string,\n}\n\nexport { PlayerAvatar }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { includes } from 'lodash'\nimport { PlayerAffilications } from '../../../../Dictionary'\nimport { PlayerAvatar } from '../../Shared/PlayerAvatar'\n\nimport styles from './Submenu.css'\n\nconst renderPlayerCard = (liberalAvatar, fascistAvatar, isOwner, isDead, role) => {\n    if (!liberalAvatar) return null\n\n    return (\n        <PlayerAvatar\n            liberalAvatar={liberalAvatar}\n            fascistAvatar={fascistAvatar}\n            isOwner={isOwner}\n            isDead={isDead}\n            role={role}\n            className={styles.uiBoxAvatar}\n        />\n    )\n}\n\nconst fascistsKinds = [PlayerAffilications.FACIST_AFFILIATION, PlayerAffilications.HITLER_AFFILIATION]\n\nconst SubmenuComponent = ({\n    isAffiliationHidden,\n    affiliation,\n    role,\n    liberalAvatar,\n    fascistAvatar,\n    isOwner,\n    isDead,\n}) => {\n    const affiliationClassName = (includes(fascistsKinds, affiliation)\n        ? styles.facist\n        : styles.liberal\n    )\n\n    return (\n        <div className={classNames(styles.submenu, { [styles.hidden]: isAffiliationHidden })}>\n            <div className={styles.affiliationCards}>\n                <span className={classNames(styles.card, affiliationClassName)} />\n                <span className={styles.card}>\n                    {renderPlayerCard(liberalAvatar, fascistAvatar, isOwner, isDead, role)}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nSubmenuComponent.displayName = 'SubmenuComponent'\nSubmenuComponent.propTypes = {\n    affiliation: PropTypes.string,\n    isAffiliationHidden: PropTypes.bool,\n    role: PropTypes.string,\n    liberalAvatar: PropTypes.number,\n    fascistAvatar: PropTypes.number,\n    isOwner: PropTypes.bool,\n    isDead: PropTypes.bool,\n}\nexport default SubmenuComponent\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { get } from 'lodash'\nimport SubmenuComponent from './SubmenuComponent'\n\nexport class Submenu extends React.PureComponent {\n    static displayName = 'Submenu'\n    static propTypes = {\n        affiliation: PropTypes.string,\n        isAffiliationHidden: PropTypes.bool,\n        role: PropTypes.string,\n        liberalAvatar: PropTypes.number,\n        fascistAvatar: PropTypes.number,\n        isOwner: PropTypes.bool,\n        isDead: PropTypes.bool,\n    }\n\n    render() {\n        const { affiliation, isAffiliationHidden, role, liberalAvatar, fascistAvatar, isOwner, isDead } = this.props\n        return (\n            <SubmenuComponent\n                affiliation={affiliation}\n                isAffiliationHidden={isAffiliationHidden}\n                role={role}\n                liberalAvatar={liberalAvatar}\n                fascistAvatar={fascistAvatar}\n                isOwner={isOwner}\n                isDead={isDead}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ user, room }) => {\n    const player = get(room.playersDict, `${user.userName}`)\n    return {\n        affiliation: get(player, 'affiliation'),\n        isAffiliationHidden: user.isAffiliationHidden,\n        role: get(player, 'role'),\n        fascistAvatar: get(player, 'facistAvatar'),\n        liberalAvatar: get(player, 'avatarNumber'),\n        isOwner: room.ownerName === user.userName,\n        isDead: get(player, 'isDead'),\n    }\n}\n\nexport default connect(mapStateToProps)(Submenu)\n","import React from 'react'\r\nimport { GameControls } from './GameControls'\r\nimport { Submenu } from './Submenu'\r\n\r\nimport styles from './UIBox.css'\r\n\r\nconst UIBox = () => (\r\n    <div className={styles.uiBox}>\r\n        <GameControls />\r\n        <Submenu />\r\n    </div>\r\n)\r\n\r\nUIBox.displayName = 'UIBox'\r\nexport default UIBox\r\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { isUndefined, get } from 'lodash'\nimport { PlayerDirection, GamePhases } from '../../../../../Dictionary'\n\nimport styles from './VoteBubble.css'\n\nconst bubbleStylesMapping = {\n    [PlayerDirection.PLAYER_DIRECTION_LEFT]: styles.bubbleLeft,\n    [PlayerDirection.PLAYER_DIRECTION_RIGHT]: styles.bubbleRight,\n    [PlayerDirection.PLAYER_DIRECTION_UP]: styles.bubbleTop,\n}\n\nexport class VoteBubble extends React.PureComponent {\n    static displayName = 'VoteBubble'\n    static propTypes = {\n        // parent\n        playerName: PropTypes.string.isRequired,\n        direction: PropTypes.string,\n\n        // redux\n        votes: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.bool, PropTypes.string])),\n        gamePhase: PropTypes.string,\n    }\n\n    getVoteBubbleStyle = () => {\n        const { direction } = this.props\n        \n        return classNames(styles.bubble, bubbleStylesMapping[direction], { [styles.active]: this.isBubbleActive() })\n    }\n\n    getVoteValue = () => {\n        const { votes, playerName } = this.props\n        const vote = get(votes, playerName)\n\n        // it means the user has not voted yet, ex. he's not in the votes object\n        if (isUndefined(vote)) {\n            return undefined\n        // it means the user has voted, but the votes have not been revealed yet\n        } else if (vote === '') {\n            return ''\n        }\n        return (vote ? 'JA' : 'NEIN')\n    }\n\n    isBubbleActive = () => {\n        const { votes, gamePhase, playerName } = this.props\n        return !isUndefined(get(votes, playerName)) && gamePhase === GamePhases.GAME_PHASE_VOTING\n    }\n\n    render() {\n        const voteValue = this.getVoteValue()\n        if (isUndefined(voteValue)) {\n            return null\n        }\n\n        return (\n            <div className={this.getVoteBubbleStyle()}>{voteValue}</div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ room }) => ({\n    votes: room.votes,\n    gamePhase: room.gamePhase,\n})\n\nexport default connect(mapStateToProps)(VoteBubble)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { PlayerAvatar } from '../../Shared/PlayerAvatar'\nimport VoteBubble from './VoteBubble/VoteBubble'\n\nimport styles from './Player.css'\n\nconst PlayerComponent = ({\n    playerName,\n    bubbleDirection,\n    liberalAvatar,\n    facistAvatar,\n    role,\n    isSelectable,\n    onChoiceModeSelect,\n    isChoiceModeVisible,\n    isDead,\n    isPlayerWaitedFor,\n    isOwner,\n}) => (\n    <div className={styles.player}>\n        <div\n            className={classNames(styles.playerWrapper, { [styles.selectable]: isSelectable, [styles.blurred]: isChoiceModeVisible && !isSelectable })}\n            data-playername={playerName}\n            onClick={isSelectable ? onChoiceModeSelect : null}\n        >\n            <div>{playerName}</div>\n            <VoteBubble playerName={playerName} direction={bubbleDirection} />\n            <PlayerAvatar\n                liberalAvatar={liberalAvatar}\n                fascistAvatar={facistAvatar}\n                isDead={isDead}\n                isPlayerWaitedFor={isPlayerWaitedFor}\n                isOwner={isOwner}\n                role={role}\n            />\n        </div>\n    </div>\n)\n\nPlayerComponent.displayName = 'PlayerComponent'\nPlayerComponent.propTypes = {\n    playerName: PropTypes.string,\n    liberalAvatar: PropTypes.number,\n    facistAvatar: PropTypes.number,\n    role: PropTypes.string,\n    isSelectable: PropTypes.bool,\n    onChoiceModeSelect: PropTypes.func,\n    isChoiceModeVisible: PropTypes.bool,\n    isDead: PropTypes.bool,\n    isPlayerWaitedFor: PropTypes.bool,\n    isOwner: PropTypes.bool,\n    bubbleDirection: PropTypes.string,\n}\nexport default PlayerComponent\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { isUndefined, get, includes } from 'lodash'\nimport PlayerComponent from './PlayerComponent'\nimport { GamePhases } from '../../../../Dictionary'\n\nexport class Player extends React.PureComponent {\n    static displayName = 'Player'\n    static propTypes = {\n        // parent\n        player: PropTypes.objectOf(PropTypes.any),\n        direction: PropTypes.string,\n        onChoiceModeSelect: PropTypes.func,\n\n        // redux\n        votes: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.bool, PropTypes.string])),\n        roomOwnerName: PropTypes.string,\n        gamePhase: PropTypes.string,\n        choiceMode: PropTypes.shape({\n            isVisible: PropTypes.bool,\n            selectablePlayers: PropTypes.arrayOf(PropTypes.string),\n        }),\n    }\n\n    onPlayerClick = (event) => {\n        this.props.onChoiceModeSelect(event.target.getAttribute('data-playername'))\n    }\n\n    isSelectable = () => {\n        const { choiceMode, player: { playerName } } = this.props\n        return choiceMode.isVisible && includes(choiceMode.selectablePlayers, playerName)\n    }\n\n    render() {\n        const {\n            gamePhase,\n            votes,\n            roomOwnerName,\n            direction,\n            choiceMode: { isVisible, chooserPlayerName },\n            player: { playerName, facistAvatar, avatarNumber, isDead, role },\n        } = this.props\n        const isSelectable = this.isSelectable()\n        const isPlayerWaitedFor = (\n            (gamePhase === GamePhases.GAME_PHASE_VOTING && isUndefined(get(votes, playerName)) && !isDead) ||\n            chooserPlayerName === playerName\n        )\n\n        return (\n            <PlayerComponent\n                playerName={playerName}\n                liberalAvatar={avatarNumber}\n                facistAvatar={facistAvatar}\n                role={role}\n                isChoiceModeVisible={isVisible}\n                isSelectable={isSelectable && !isDead}\n                isDead={isDead}\n                onChoiceModeSelect={this.onPlayerClick}\n                isPlayerWaitedFor={isPlayerWaitedFor}\n                isOwner={playerName === roomOwnerName}\n                bubbleDirection={direction}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ room, players }) => ({\n    votes: room.votes,\n    gamePhase: room.gamePhase,\n    roomOwnerName: room.ownerName,\n    choiceMode: players.choiceMode,\n})\n\nexport default connect(mapStateToProps)(Player)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport styles from './CurtainWrapper.css'\n\nclass CurtainWrapper extends PureComponent {\n    static displayName = 'CurtainWrapper'\n    static propTypes = {\n        isHidden: PropTypes.bool,\n        isFascist: PropTypes.bool,\n    }\n\n    render() {\n        const { isHidden, isFascist } = this.props\n        return (\n            <div className={classNames(styles.curtain, { [styles.liberal]: !isFascist, [styles.fascist]: isFascist })}>\n                <div className={styles.curtainWrapper}>\n                    <div className={classNames(styles.curtainPanel, styles.left, { [styles.hidden]: isHidden })} />\n                    <div className={classNames(styles.curtainPanel, styles.right, { [styles.hidden]: isHidden })} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CurtainWrapper\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { times, map } from 'lodash'\nimport classNames from 'classnames'\nimport { PlayerDirection } from '../../../Dictionary'\nimport Player from './Player/Player'\nimport liberalCard from '../../static/liberalcard.png'\nimport facistCard from '../../static/facistcard.png'\nimport liberalPolicies from '../../static/liberalpolicies.png'\nimport CurtainWrapper from './CurtainWrapper/CurtainWrapper'\n\nimport styles from './PlayerBoard.css'\n\nconst PlayerBoardComponent = ({\n    playersLeft = [],\n    playersMiddle = [],\n    playersRight = [],\n    policiesLiberalCount = 0,\n    policiesFacistCount = 0,\n    trackerPosition,\n    trackerMoved,\n    isChoiceModeVisible,\n    onChoiceModeSelect,\n    renderFascistPlayerBoard,\n    isPlayerboardHidden,\n    isModalVisible,\n}) => {\n    const renderPolicies = (count, cardType) => {\n        const result = []\n        const cardPicture = (cardType === 'liberal' ? liberalCard : facistCard)\n\n        times(count, (index) => {\n            result.push(<img key={`${cardType}-card-${index}`} src={cardPicture} alt=\"Policy\" />)\n        })\n\n        return result\n    }\n\n    const renderPlayers = (playersList, containerClass, direction) => {\n        return (\n            <div className={containerClass}>\n                {map(playersList, player =>\n                    <Player\n                        key={player.playerName}\n                        player={player}\n                        direction={direction}\n                        onChoiceModeSelect={onChoiceModeSelect}\n                    />,\n                )}\n            </div>\n        )\n    }\n\n    const trackerFromLeftStyle = { left: `${37 + trackerPosition * 8}%` }\n    const playerBoardClasses = classNames(styles.playerBoard, { [styles.blurred]: isModalVisible })\n\n    return (\n        <div className={playerBoardClasses}>\n            {isChoiceModeVisible && <div className={styles.choiceOverlay} />}\n            {renderPlayers(playersLeft, styles.playersContainer, PlayerDirection.PLAYER_DIRECTION_LEFT)}\n            <div className={styles.centralPart}>\n                {renderPlayers(playersMiddle, styles.playersContainerMiddle, PlayerDirection.PLAYER_DIRECTION_UP)}\n\n                <div className={classNames(styles.policy, { [styles.blurred]: isChoiceModeVisible })}>\n                    <CurtainWrapper isHidden={isPlayerboardHidden} />\n                    <img src={liberalPolicies} />\n                    <div className={classNames(styles.policyCard, styles.policyCardLiberal)}>\n                        {renderPolicies(policiesLiberalCount, 'liberal')}\n                    </div>\n                    <div className={classNames(styles.tracker, { [styles.moving]: trackerMoved })} style={trackerFromLeftStyle} />\n                </div>\n\n                <div className={classNames(styles.policy, { [styles.blurred]: isChoiceModeVisible })}>\n                    <CurtainWrapper isHidden={isPlayerboardHidden} isFascist />\n                    <img src={renderFascistPlayerBoard()} />\n                    <div className={classNames(styles.policyCard, styles.policyCardFascist)}>\n                        {renderPolicies(policiesFacistCount, 'facist')}\n                    </div>\n                </div>\n            </div>\n\n            {renderPlayers(playersRight, styles.playersContainer, PlayerDirection.PLAYER_DIRECTION_RIGHT)}\n        </div>\n    )\n}\n\nPlayerBoardComponent.propTypes = {\n    playersLeft: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)),\n    playersRight: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)),\n    playersMiddle: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)),\n    policiesLiberalCount: PropTypes.number,\n    policiesFacistCount: PropTypes.number,\n    trackerPosition: PropTypes.number,\n    isChoiceModeVisible: PropTypes.bool,\n    onChoiceModeSelect: PropTypes.func,\n    renderFascistPlayerBoard: PropTypes.func,\n    isPlayerboardHidden: PropTypes.bool,\n    isModalVisible: PropTypes.bool,\n}\nexport default PlayerBoardComponent\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { delay, map, reject, find, forEach } from 'lodash'\nimport { PlayerRole, ChoiceModeContexts, SocketEvents, PlayerBoards } from '../../../Dictionary'\nimport { socket } from '../../utils/SocketHandler'\nimport PlayerBoardComponent from './PlayerBoardComponent'\nimport { increasePolicyCount, increaseTracker, resetTracker } from '../../ducks/roomDuck'\nimport { hideChoiceMode } from '../../ducks/playersDuck'\nimport SmallFascistPlayerBoardImage from '../../static/facistpoliciesSmall.png'\nimport MediumFascistPlayerBoardImage from '../../static/facistpoliciesMedium.png'\nimport LargeFascistPlayerBoardImage from '../../static/facistpoliciesLarge.png'\n\nexport class PlayerBoard extends React.PureComponent {\n    static propTypes = {\n        // redux\n        roomActions: PropTypes.objectOf(PropTypes.func),\n        playersDict: PropTypes.objectOf(PropTypes.any),\n        userName: PropTypes.string,\n        facistPoliciesCount: PropTypes.number,\n        liberalPoliciesCount: PropTypes.number,\n        trackerPosition: PropTypes.number,\n        boardType: PropTypes.string,\n        isModalVisible: PropTypes.bool,\n        choiceMode: PropTypes.shape({\n            isVisible: PropTypes.bool,\n            selectablePlayers: PropTypes.arrayOf(PropTypes.string),\n            context: PropTypes.string,\n        }),\n        playersActions: PropTypes.objectOf(PropTypes.func),\n    }\n\n    state = { trackerMoved: false }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.trackerPosition !== nextProps.trackerPosition) {\n            this.setState({ trackerMoved: true })\n        } else {\n            this.setState({ trackerMoved: false })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.trackerPosition >= 3 && (prevProps.trackerPosition !== this.props.trackerPosition)) {\n            delay(this.props.roomActions.resetTracker, 1000)\n        }\n    }\n\n    makePlayer = (player) => {\n        const currentPresident = find(this.props.playersDict, { role: PlayerRole.ROLE_PRESIDENT })\n        const currentChancellor = find(this.props.playersDict, { role: PlayerRole.ROLE_CHANCELLOR })\n        let role\n        if (currentPresident && player.playerName === currentPresident.playerName) {\n            role = PlayerRole.ROLE_PRESIDENT\n        } else if (currentChancellor && player.playerName === currentChancellor.playerName) {\n            role = PlayerRole.ROLE_CHANCELLOR\n        } else {\n            role = null\n        }\n\n        return {\n            playerName: player.playerName,\n            role,\n            avatarNumber: player.avatarNumber,\n            facistAvatar: player.facistAvatar,\n            isDead: player.isDead,\n        }\n    }\n\n    onChoiceModeSelect = (selection) => {\n        const { choiceMode: { context } } = this.props\n        let hideChoice = true\n        let socketEvent = null\n        switch (context) {\n            case ChoiceModeContexts.ChancellorChoice:\n                socketEvent = SocketEvents.VOTING_PHASE_START\n                break\n            case ChoiceModeContexts.KillChoice:\n                socketEvent = SocketEvents.PlayerKilled\n                break\n            case ChoiceModeContexts.KickChoice:\n                socketEvent = SocketEvents.PlayerKicked\n                break\n            case ChoiceModeContexts.BanChoice:\n                socketEvent = SocketEvents.PlayerBanned\n                break\n            case ChoiceModeContexts.DesignateNextPresidentChoice:\n                socketEvent = SocketEvents.DesignateNextPresident\n                break\n            case ChoiceModeContexts.AffiliationPeekChoice:\n                socketEvent = SocketEvents.SuperpowerAffiliationPeekPlayerChoose\n                break\n            default:\n                hideChoice = false\n                console.info('no action matches the specified context')\n        }\n        if (socketEvent) socket.emit(socketEvent, { playerName: selection })\n        if (hideChoice) this.props.playersActions.hideChoiceMode()\n    }\n\n    getFascistPlayerBoard = () => {\n        const { boardType } = this.props\n        switch (boardType) {\n            case PlayerBoards.SmallBoard:\n                return SmallFascistPlayerBoardImage\n            case PlayerBoards.MediumBoard:\n                return MediumFascistPlayerBoardImage\n            case PlayerBoards.LargeBoard:\n                return LargeFascistPlayerBoardImage\n            default:\n                return SmallFascistPlayerBoardImage\n        }\n    }\n\n    render() {\n        const {\n            choiceMode,\n            playersDict,\n            userName,\n            liberalPoliciesCount,\n            facistPoliciesCount,\n            trackerPosition,\n            boardType,\n            isModalVisible,\n        } = this.props\n        const playersWithoutMe = reject(playersDict, { playerName: userName })\n        const players = map(playersWithoutMe, player => this.makePlayer(player))\n        const left = []\n        const center = []\n        const right = []\n\n        forEach(players, (player, index) => {\n            if (index % 3 === 0) {\n                left.push(player)\n            } else if (index % 3 === 1) {\n                right.push(player)\n            } else {\n                center.push(player)\n            }\n        })\n\n        return (<PlayerBoardComponent\n            playersLeft={left}\n            playersMiddle={center}\n            playersRight={right}\n            policiesLiberalCount={liberalPoliciesCount}\n            policiesFacistCount={facistPoliciesCount}\n            isChoiceModeVisible={choiceMode.isVisible}\n            onChoiceModeSelect={this.onChoiceModeSelect}\n            trackerPosition={trackerPosition}\n            trackerMoved={this.state.trackerMoved}\n            renderFascistPlayerBoard={this.getFascistPlayerBoard}\n            isPlayerboardHidden={!!boardType}\n            isModalVisible={isModalVisible}\n        />)\n    }\n}\n\nconst mapStateToProps = ({ user, room, players, modal }) => ({\n    userName: user.userName,\n    playersDict: room.playersDict,\n    facistPoliciesCount: room.facistPoliciesCount,\n    liberalPoliciesCount: room.liberalPoliciesCount,\n    trackerPosition: room.trackerPosition,\n    choiceModeContext: room.choiceModeContext,\n    boardType: room.boardType,\n    choiceMode: players.choiceMode,\n    isModalVisible: modal.isVisible,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    roomActions: bindActionCreators({ increasePolicyCount, increaseTracker, resetTracker }, dispatch),\n    playersActions: bindActionCreators({ hideChoiceMode }, dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerBoard)\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { map } from 'lodash'\r\nimport classNames from 'classnames/bind'\r\n\r\nimport styles from './MessagesBox.css'\r\n\r\nconst buildMessage = (message, index) => {\r\n    const { time, author, content } = message\r\n    const displayedMessage = `[${time}]${author ? ` ${author}:` : ':'} ${content}`\r\n\r\n    return (\r\n        <div key={index} className={classNames(styles.message, { [styles.serverMessage]: !author })}>\r\n            {displayedMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MessagesBoxComponent = React.forwardRef(({\r\n    messages = [],\r\n}, messagesBoxRef) => (\r\n    <div className={styles.messagesBox} ref={messagesBoxRef}>\r\n        {map(messages, (message, index) => buildMessage(message, index))}\r\n    </div>\r\n))\r\n\r\nMessagesBoxComponent.displayName = 'MessagesBoxComponent'\r\nMessagesBoxComponent.propTypes = {\r\n    messages: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)),\r\n}\r\nexport default MessagesBoxComponent\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport MessagesBoxComponent from './MessagesBoxComponent'\r\n\r\nexport class MessagesBox extends React.PureComponent {\r\n    static displayName = 'MessagesBox'\r\n\r\n    static propTypes = {\r\n        // redux\r\n        messages: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)),\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n        this.messagesBoxRef = React.createRef()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (snapshot) {\r\n            this.scrollToBottomOfMessages()\r\n        }\r\n    }\r\n\r\n    getSnapshotBeforeUpdate() {\r\n        const { current } = this.messagesBoxRef\r\n        if (current) {\r\n            // visible height + pixel scrolled === total height\r\n            // if user has chat scrolled to bottom in moment of receiving message\r\n            // return true (which means for componentDidUpdate, scroll the chat!)\r\n            if (current.offsetHeight + current.scrollTop === current.scrollHeight) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    scrollToBottomOfMessages = () => {\r\n        const { current } = this.messagesBoxRef\r\n        current.scrollTop = current.scrollHeight\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MessagesBoxComponent\r\n                messages={this.props.messages}\r\n                ref={this.messagesBoxRef}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ chat }) => ({\r\n    messages: chat.messages,\r\n})\r\n\r\nexport default connect(mapStateToProps)(MessagesBox)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Icon } from '../../Shared/Icon'\r\n\r\nimport styles from './ChatForm.css'\r\n\r\nconst ChatFormComponent = ({\r\n    sendMessage,\r\n    typedMessage,\r\n    changeMessageText,\r\n    handleFormKeyPress,\r\n}) => (\r\n    <div className={styles.chatForm}>\r\n        <input className={styles.sendInput} value={typedMessage} onChange={changeMessageText} onKeyPress={handleFormKeyPress} />\r\n        <div className={styles.sendButton} onClick={sendMessage}>\r\n            <Icon name=\"fa-envelope\" />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nChatFormComponent.displayName = 'ChatFormComponent'\r\nChatFormComponent.propTypes = {\r\n    sendMessage: PropTypes.func.isRequired,\r\n    typedMessage: PropTypes.string.isRequired,\r\n    changeMessageText: PropTypes.func.isRequired,\r\n    handleFormKeyPress: PropTypes.func.isRequired,\r\n}\r\nexport default ChatFormComponent\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport ChatFormComponent from './ChatFormComponent'\r\nimport { SocketEvents } from '../../../../Dictionary'\r\nimport { socket } from '../../../utils/SocketHandler'\r\n\r\nexport class ChatForm extends React.PureComponent {\r\n    static displayName = 'ChatForm'\r\n    static propTypes = {\r\n        // redux\r\n        userName: PropTypes.string,\r\n    }\r\n    state = {\r\n        typedMessage: '',\r\n    }\r\n\r\n    sendMessage = () => {\r\n        if (this.state.typedMessage) {\r\n            socket.emit(SocketEvents.CLIENT_SEND_MESSAGE, {\r\n                author: this.props.userName,\r\n                content: this.state.typedMessage,\r\n            })\r\n            this.setState({\r\n                typedMessage: '',\r\n            })\r\n        }\r\n    }\r\n\r\n    handleFormKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.sendMessage()\r\n        }\r\n    }\r\n\r\n    changeMessageText = (event) => {\r\n        this.setState({ typedMessage: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ChatFormComponent\r\n                sendMessage={this.sendMessage}\r\n                typedMessage={this.state.typedMessage}\r\n                handleFormKeyPress={this.handleFormKeyPress}\r\n                changeMessageText={this.changeMessageText}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n    userName: user.userName,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ChatForm)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport MessagesBox from './MessagesBox/MessagesBox'\r\nimport ChatForm from './ChatForm/ChatForm'\r\n\r\nimport styles from './Chat.css'\r\n\r\nconst Chat = ({ className }) => (\r\n    <div className={classNames(styles.chat, className)}>\r\n        <MessagesBox />\r\n        <ChatForm />\r\n    </div>\r\n)\r\n\r\nChat.displayName = 'Chat'\r\nChat.propTypes = {\r\n    className: PropTypes.string,\r\n}\r\nexport default Chat\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport { Button } from '../Shared/Buttons'\n\nimport styles from './Timer.css'\n\nconst TimerComponent = ({ secondsRemaining, isVetoUnlocked, onVetoClick }) => (\n    <div className={classNames(styles.timer, { [styles.visible]: !!secondsRemaining })}>\n        <strong>{secondsRemaining}</strong>s remaining\n        {isVetoUnlocked && <Button className={styles.veto} onClick={onVetoClick}>veto</Button>}\n    </div>\n)\n\nTimerComponent.displayName = 'TimerComponent'\nTimerComponent.propTypes = {\n    secondsRemaining: PropTypes.number,\n    onVetoClick: PropTypes.func,\n    isVetoUnlocked: PropTypes.bool,\n}\n\nexport default TimerComponent\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { SocketEvents } from '../../../Dictionary'\nimport TimerComponent from './TimerComponent'\nimport { setWaitTime, setVeto } from '../../ducks/roomDuck'\nimport { socket } from '../../utils/SocketHandler'\n\nexport class Timer extends React.PureComponent {\n    static displayName = 'Timer'\n    static propTypes = {\n        setVeto: PropTypes.func,\n        setWaitTime: PropTypes.func,\n        waitTime: PropTypes.number,\n        isVetoUnlocked: PropTypes.bool,\n    }\n    state = {\n        secondsRemaining: 0,\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.waitTime !== nextProps.waitTime && nextProps.waitTime) {\n            this.setState({ secondsRemaining: nextProps.waitTime / 1000 })\n            clearInterval(this.interval)\n            this.interval = setInterval(this.tick, 1000)\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    onVetoClick = () => {\n        socket.emit(SocketEvents.VetoVoteRegistered)\n        this.props.setVeto({ value: false })\n    }\n\n    tick = () => {\n        this.setState({ secondsRemaining: this.state.secondsRemaining - 1 })\n        if (this.state.secondsRemaining <= 0) {\n            this.props.setWaitTime(0)\n            clearInterval(this.interval)\n        }\n    }\n\n    render() {\n        const { isVetoUnlocked } = this.props\n        return (\n            <TimerComponent\n                secondsRemaining={this.state.secondsRemaining}\n                isVetoUnlocked={isVetoUnlocked}\n                onVetoClick={this.onVetoClick}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ room }) => ({\n    waitTime: room.waitTime,\n    isVetoUnlocked: room.isVetoUnlocked,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setWaitTime: payload => dispatch(setWaitTime(payload)),\n    setVeto: payload => dispatch(setVeto(payload)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)\n","import React from 'react'\nimport { UIBox } from '../UIBox'\nimport PlayerBoard from '../PlayerBoard/PlayerBoard'\nimport Chat from '../Chat/Chat'\nimport Timer from '../Timer/Timer'\n\nimport styles from './GameRoom.css'\n\nconst GameRoomComponent = () => {\n    return (\n        <div className={styles.gameRoom}>\n            <PlayerBoard />\n            <UIBox />\n            <Chat />\n            <Timer />\n        </div>\n    )\n}\n\nexport default GameRoomComponent\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport GameRoomComponent from './GameRoomComponent'\n\nexport class GameRoom extends React.PureComponent {\n    static propTypes = {\n        // redux\n        gamePhase: PropTypes.string,\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0)\n    }\n\n    render() {\n        console.info('Current game phase: ', this.props.gamePhase)\n        return <GameRoomComponent />\n    }\n}\n\nconst mapStateToProps = ({ room }) => ({\n    gamePhase: room.gamePhase,\n})\nexport default connect(mapStateToProps)(GameRoom)\n","import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Icon } from '../../../../../Shared/Icon'\nimport { ControlButton } from '../../../../../Shared/Buttons'\n\nimport styles from './RoomCell.css'\n\nconst RoomCell = ({ room: { roomName, playersCount, roomId, maxPlayers, hasPassword }, onJoin }) => {\n    const [showPasswordInput, setPasswordInputVisibility] = useState(false)\n    const [password, setPassword] = useState('')\n\n    const onClick = useCallback(\n        () => {\n            if (hasPassword && !showPasswordInput) {\n                setPasswordInputVisibility(true)\n                return\n            }\n\n            onJoin(roomId, password)\n        },\n        [hasPassword, setPasswordInputVisibility, roomId, password],\n    )\n\n    return (\n        <div className={styles.room}>\n            <div className={styles.roomName}>{roomName}</div>\n            {showPasswordInput && (\n                <input\n                    autoFocus={true}\n                    className={styles.passwordInput}\n                    onChange={event => setPassword(event.target.value)}\n                    onKeyDown={event => event.key === 'Enter' && onJoin(roomId, password)}\n                    placeholder=\"Type password to room\"\n                    type=\"password\"\n                    value={password}\n                />\n            )}\n            <div className={styles.rightSide}>\n                <ControlButton onClick={onClick} className={styles.button}>\n                    join\n                    {hasPassword && <Icon name=\"fa-lock\" className={styles.icon} />}\n                </ControlButton>\n                <span className={styles.playerCount}>\n                    {playersCount}/{maxPlayers}\n                    <Icon name=\"fa-user\" className={styles.icon} />\n                </span>\n            </div>\n        </div>\n    )\n}\n\nRoomCell.propTypes = {\n    room: PropTypes.shape({\n        roomName: PropTypes.string,\n        playersCount: PropTypes.number,\n        roomId: PropTypes.string,\n        maxPlayers: PropTypes.number,\n        hasPassword: PropTypes.bool,\n    }),\n    onJoin: PropTypes.func,\n}\n\nexport { RoomCell }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { map } from 'lodash'\n\nimport { RoomCell } from './components/RoomCell'\nimport styles from './GameList.css'\n\nexport const GameListComponent = ({ rooms, onJoin }) => (\n    <div className={styles.gameList}>\n        {map(rooms, (room) => (\n            <div key={room.roomName} className={styles.gameListElement}>\n                <RoomCell room={room} onJoin={onJoin} />\n            </div>\n        ))}\n    </div>\n)\n\nGameListComponent.propTypes = {\n    rooms: PropTypes.objectOf(PropTypes.shape({\n        roomName: PropTypes.string,\n        playersCount: PropTypes.number,\n        roomId: PropTypes.string,\n        maxPlayers: PropTypes.number,\n    })),\n    onJoin: PropTypes.func,\n}\n","import React from 'react'\n\nimport styles from './NoResults.css'\n\nexport const NoResults = () => (\n    <div className={styles.noResults}>\n        <span className={styles.noResultsHeadline}>\n            No rooms found at this moment\n        </span>\n        <span className={styles.noResultsParagraph}>\n            {\"Click on the 'New Room' button to your right to create a new room\"}\n        </span>\n    </div>\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { size } from 'lodash'\nimport { socket } from '../../../../utils/SocketHandler'\nimport { SocketEvents } from '../../../../../Dictionary'\nimport { GameListComponent } from './GameListComponent'\nimport { NoResults } from './components/NoResults'\n\nconst joinRoom = (roomId, password) => {\n    socket.emit(SocketEvents.CLIENT_JOIN_ROOM, { roomName: roomId, password })\n}\n\nexport class GameList extends React.PureComponent {\n    static propTypes = {\n        // redux\n        rooms: PropTypes.objectOf(PropTypes.any),\n    }\n\n    render() {\n        const { rooms } = this.props\n\n        if (!rooms || size(rooms) === 0) {\n            return <NoResults />\n        }\n\n        return (\n            <GameListComponent rooms={rooms} onJoin={joinRoom} />\n        )\n    }\n}\n\nconst mapStateToProps = ({ lobby }) => ({\n    rooms: lobby.roomsList,\n})\n\nexport default connect(mapStateToProps)(GameList)\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ControlButton } from '../../../Shared/Buttons'\r\n\r\nimport styles from './TopNavbar.css'\r\nimport commonStyles from '../../../Shared/CommonStyles/commonStyles.css'\r\n\r\nexport const TopNavbarComponent = ({ onShowModal, userName }) => (\r\n    <div className={styles.topBar}>\r\n        <span className={commonStyles.ellipsis}>Hello <b>{userName}</b>!</span>\r\n        <ControlButton onClick={onShowModal}>New room</ControlButton>\r\n    </div>\r\n)\r\n\r\n\r\nTopNavbarComponent.propTypes = {\r\n    onShowModal: PropTypes.func,\r\n    userName: PropTypes.string,\r\n}\r\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { setModal } from '../../../../ducks/modalDuck'\nimport { TopNavbarComponent } from './TopNavbarComponent'\n\nexport class TopNavbar extends PureComponent {\n    static propTypes = {\n        setModal: PropTypes.func,\n        userName: PropTypes.string,\n    }\n\n    onShowModal = () => {\n        this.props.setModal({\n            title: 'Create new game',\n            isCloseButtonShown: true,\n            isOverlayOpaque: true,\n            componentName: 'CreateGameModal',\n        })\n    }\n\n    render() {\n        return (\n            <TopNavbarComponent\n                onShowModal={this.onShowModal}\n                userName={this.props.userName}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ user }) => ({\n    userName: user.userName,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setModal: modalOptions => dispatch(setModal(modalOptions)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNavbar)\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { getAvatar } from '../../../../utils/avatarsHelper'\n\nimport styles from './PlayersList.css'\nimport commonStyles from '../../../Shared/CommonStyles/commonStyles.css'\n\nexport const PlayersListRow = ({ playerName, avatarNumber, currentRoom }) => {\n    return (\n        <div className={classNames(styles.playerRow, { [styles.busy]: !!currentRoom })}>\n            <img\n                className={styles.avatar}\n                src={getAvatar(`liberal-${avatarNumber}`)}\n                alt=\"Player avatar\"\n            />\n            <span className={classNames(commonStyles.ellipsis, styles.playerName)}>{playerName}</span>\n            {currentRoom && (\n                <Fragment>\n                    <span className={classNames(commonStyles.ellipsis, styles.roomName)}>\n                        <span>\n                            <span>room:{' '}</span>\n                            <b className={styles.roomNameText}>{currentRoom}</b>\n                        </span>\n                    </span>\n                    <span className={classNames(styles.roomName, styles.mobile)}>Busy</span>\n                </Fragment>\n            )}\n        </div>\n    )\n}\n\nPlayersListRow.propTypes = {\n    playerName: PropTypes.string.isRequired,\n    avatarNumber: PropTypes.number.isRequired,\n    currentRoom: PropTypes.string,\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { map, size, groupBy } from 'lodash'\nimport { PlayersListRow } from './PlayersListRow'\n\nimport styles from './PlayersList.css'\n\nexport const PlayersList = ({ playersList }) => {\n    const groupedPlayers = groupBy(playersList, player => !!player.currentRoom)\n\n    return (\n        <div className={styles.playersList}>\n            <div className={styles.category}>\n                <span>Online: <b>{size(playersList)}</b></span>\n            </div>\n            {map(groupedPlayers.true, player => (\n                <PlayersListRow\n                    key={player.playerName}\n                    playerName={player.playerName}\n                    avatarNumber={player.avatarNumber}\n                    currentRoom={player.currentRoom}\n                />\n            ))}\n            {map(groupedPlayers.false, player => (\n                <PlayersListRow\n                    key={player.playerName}\n                    playerName={player.playerName}\n                    avatarNumber={player.avatarNumber}\n                    currentRoom={player.currentRoom}\n                />\n            ))}\n        </div>\n    )\n}\n\nPlayersList.propTypes = {\n    playersList: PropTypes.objectOf(PropTypes.shape({\n        playerName: PropTypes.string.isRequired,\n        avatarNumber: PropTypes.number.isRequired,\n        currentRoom: PropTypes.string,\n    })),\n}\n\nconst mapStateToProps = ({ lobby }) => ({\n    playersList: lobby.playersList,\n})\n\nexport default connect(mapStateToProps)(PlayersList)\n","import React from 'react'\nimport { GameList } from './components/GameList'\nimport { TopNavbar } from './components/TopNavbar'\nimport { PlayersList } from './components/PlayersList'\nimport Chat from '../Chat/Chat'\n\nimport styles from './Lobby.css'\n\nexport const Lobby = () => (\n    <div className={styles.gameListContainer}>\n        <div className={styles.firstColumn}>\n            <GameList />\n        </div>\n        <div className={styles.secondColumn}>\n            <TopNavbar />\n            <PlayersList />\n            <Chat className={styles.lobbyChat} />\n        </div>\n    </div>\n)\n","import React from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { Scrollbars } from 'react-custom-scrollbars'\r\nimport classNames from 'classnames/bind'\r\nimport { Icon } from '../Shared/Icon'\r\n\r\nimport styles from './Modal.css'\r\n\r\nconst ModalComponent = ({\r\n    isVisible = false,\r\n    title,\r\n    overlayClosesModal,\r\n    isCloseButtonShown,\r\n    isOverlayOpaque,\r\n    closeModal,\r\n    child,\r\n}) => {\r\n    const overlayClasses = classNames(styles.modalOverlay, { [styles.opaque]: isOverlayOpaque })\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={isVisible}\r\n            timeout={700}\r\n            unmountOnExit\r\n            mountOnEnter\r\n            appear\r\n            classNames={{\r\n                enter: styles.modalEnter,\r\n                enterActive: styles.modalEnterActive,\r\n                exit: styles.modalExit,\r\n                exitActive: styles.modalExitActive,\r\n            }}\r\n        >\r\n            <div className={styles.modalContainer}>\r\n                <div className={styles.modalContent}>\r\n                    {isCloseButtonShown && (\r\n                        <a className={styles.modalCloseButton} onClick={closeModal}>\r\n                            <Icon name=\"fa-times\" />\r\n                        </a>\r\n                    )}\r\n                    <div className={styles.modalTitle}>{title}</div>\r\n                    <div className={styles.modalBody}>{child}</div>\r\n                </div>\r\n                <a className={overlayClasses} onClick={overlayClosesModal ? closeModal : null} />\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default ModalComponent\r\n","import React from 'react'\nimport { map } from 'lodash'\nimport { PlayerAvatar } from '../../Shared/PlayerAvatar'\n\nimport styles from './WinningModal.css'\n\nconst WinningModalComponent = ({ winners, losers }) => {\n    return (\n        <div className={styles.winningModal}>\n            <div className={styles.list}>\n                {map(winners, winner => (\n                    <div key={winner.playerName} className={styles.winnerDance}>\n                        <div className={styles.avatarName}>{winner.playerName}</div>\n                        <PlayerAvatar\n                            key={winner.playerName}\n                            liberalAvatar={winner.avatarNumber}\n                            fascistAvatar={winner.facistAvatar}\n                        />\n                    </div>\n                ))}\n            </div>\n            <div className={styles.list}>\n                {map(losers, loser => (\n                    <div key={loser.playerName}>\n                        <div className={styles.avatarName}>{loser.playerName}</div>\n                        <PlayerAvatar\n                            key={loser.playerName}\n                            liberalAvatar={loser.avatarNumber}\n                            fascistAvatar={loser.facistAvatar}\n                            className={styles.loserSorrow}\n                        />\n                        <div className={styles.drop} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default WinningModalComponent\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { filter, reject } from 'lodash'\nimport PropTypes from 'prop-types'\nimport WinningModalComponent from './WinningModalComponent'\nimport { PlayerAffilications } from '../../../../Dictionary'\n\nclass WinningModal extends PureComponent {\n    static propTypes = {\n        data: PropTypes.objectOf(PropTypes.string),\n        playerDict: PropTypes.object,\n    }\n    render() {\n        const liberalsWon = this.props.data.whoWon === PlayerAffilications.LIBERAL_AFFILIATION\n        const liberals = filter(this.props.playersDict, { affiliation: PlayerAffilications.LIBERAL_AFFILIATION })\n        const fascist = reject(this.props.playersDict, { affiliation: PlayerAffilications.LIBERAL_AFFILIATION })\n        const winners = liberalsWon ? liberals : fascist\n        const losers = liberalsWon ? fascist : liberals\n        return (\n            <WinningModalComponent\n                winners={winners}\n                losers={losers}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ room }) => {\n    return {\n        playersDict: room.playersDict,\n    }\n}\n\nexport default connect(mapStateToProps)(WinningModal)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { PlayerRole } from '../../../../Dictionary'\nimport { FancyButton } from '../../Shared/Buttons'\nimport { PlayerAvatar } from '../../Shared/PlayerAvatar'\nimport { Icon } from '../../Shared/Icon'\n\nimport commonStyles from '../../Shared/CommonStyles/commonStyles.css'\nimport styles from './VotingModal.css'\n\nconst VotingModalComponent = ({\n    onYesVote,\n    onNoVote,\n    president,\n    chancellorCandidate,\n}) => {\n    const renderPlayer = (avatarNumber, role, playerName) => {\n        return (\n            <div className={styles.votingInfoPlayer}>\n                <PlayerAvatar\n                    liberalAvatar={avatarNumber}\n                    role={role}\n                    className={styles.avatar}\n                />\n                <span className={commonStyles.ellipsis}>{playerName}</span>\n            </div>\n        )\n    }\n    if (!chancellorCandidate || !president) return null\n\n    return (\n        <React.Fragment>\n            <div className={styles.votingInfoContainer}>\n                {renderPlayer(president.avatarNumber, PlayerRole.ROLE_PRESIDENT, president.playerName)}\n                <div className={styles.choiceOrderContainer}>\n                    <div><Icon name=\"fa-angle-double-right\" /></div>\n                    <div>Nominates</div>\n                </div>\n                {renderPlayer(chancellorCandidate.avatarNumber, PlayerRole.ROLE_CHANCELLOR, chancellorCandidate.playerName)}\n            </div>\n            <div className={styles.votingIntro}>The president nominates <strong>{chancellorCandidate.playerName}</strong> for a new chancellor!</div>\n            <div className={styles.votingIntro}>Do you agree?</div>\n            <div className={styles.votingButtonsContainer}>\n                <FancyButton onClick={onYesVote}>Jaa!</FancyButton>\n                <FancyButton onClick={onNoVote}>Nein!</FancyButton>\n            </div>\n        </React.Fragment>\n    )\n}\n\nVotingModalComponent.propTypes = {\n    onYesVote: PropTypes.func.isRequired,\n    onNoVote: PropTypes.func.isRequired,\n    president: PropTypes.shape({\n        avatarNumber: PropTypes.number.isRequired,\n        playerName: PropTypes.string.isRequired,\n    }),\n    chancellorCandidate: PropTypes.shape({\n        avatarNumber: PropTypes.number.isRequired,\n        playerName: PropTypes.string.isRequired,\n    }),\n}\n\nexport default VotingModalComponent\n","import React from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { find } from 'lodash'\nimport PropTypes from 'prop-types'\nimport VotingModalComponent from './VotingModalComponent'\nimport { SocketEvents, PlayerRole } from '../../../../Dictionary'\nimport { socket } from '../../../utils/SocketHandler'\n\nexport class VotingModal extends React.PureComponent {\n    static propTypes = {\n        data: PropTypes.object,\n        playersDict: PropTypes.object,\n        closeModal: PropTypes.func,\n        roomActions: PropTypes.objectOf(PropTypes.any),\n    };\n\n    onYesVote = () => {\n        socket.emit(SocketEvents.CLIENT_VOTE, { value: true })\n        this.props.closeModal()\n    }\n\n    onNoVote = () => {\n        socket.emit(SocketEvents.CLIENT_VOTE, { value: false })\n        this.props.closeModal()\n    }\n\n    render() {\n        const chancellorCandidate = this.props.playersDict[this.props.data.chancellorCandidate]\n        const president = find(this.props.playersDict, { role: PlayerRole.ROLE_PRESIDENT })\n        return (\n            <VotingModalComponent\n                onYesVote={this.onYesVote}\n                onNoVote={this.onNoVote}\n                president={president}\n                chancellorCandidate={chancellorCandidate}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ room: { playersDict, isVotingModalShown } }) => {\n    return {\n        playersDict,\n        isVotingModalShown,\n    }\n}\nexport default connect(mapStateToProps)(VotingModal)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { map } from 'lodash'\nimport { PolicyCards } from '../../../../Dictionary'\nimport { FancyButton } from '../../Shared/Buttons'\n\nimport styles from './PolicyChoiceModal.css'\n\nconst liberalPolicy = require('../../../static/liberalcard.png')\nconst fascistPolicy = require('../../../static/facistcard.png')\n\n\nconst PolicyChoiceModalComponent = ({\n    policies,\n    onClick,\n    selectable,\n    onButtonClose,\n}) => {\n    const policyClasses = classNames(styles.policy, { [styles.selectable]: selectable })\n    return (\n        <div className={styles.policyChoiceModal}>\n            <ul className={styles.policyList}>\n                {map(policies, (choice, index) => {\n                    const policy = (choice === PolicyCards.LiberalPolicy) ? liberalPolicy : fascistPolicy\n                    return (\n                        <img onClick={onClick} alt=\"policy_card\" key={index} className={policyClasses} src={policy} data-index={index} />\n                    )\n                })}\n            </ul>\n            {!selectable && (\n                <FancyButton\n                    onClick={onButtonClose}\n                    className={styles.acknowledgeButton}\n                >\n                    Acknowledged\n                </FancyButton>\n            )}\n        </div>\n    )\n}\n\nPolicyChoiceModalComponent.propTypes = {\n    policies: PropTypes.arrayOf(PropTypes.string),\n    onClick: PropTypes.func,\n    selectable: PropTypes.bool,\n    onButtonClose: PropTypes.func,\n}\nexport default PolicyChoiceModalComponent\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { get, pullAt } from 'lodash'\r\nimport PolicyChoiceModalComponent from './PolicyChoiceModalComponent'\r\nimport { SocketEvents, PlayerRole } from '../../../../Dictionary'\r\nimport { socket } from '../../../utils/SocketHandler'\r\n\r\nexport class PolicyChoiceModal extends React.PureComponent {\r\n    static propTypes = {\r\n        // parent\r\n        data: PropTypes.shape({\r\n            policies: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n            selectable: PropTypes.bool,\r\n        }),\r\n        closeModal: PropTypes.func.isRequired,\r\n    }\r\n\r\n    onPolicyChoice = (event) => {\r\n        const { data: { policies } } = this.props\r\n        const index = event.target.getAttribute('data-index')\r\n        const choice = policies[index]\r\n\r\n        socket.emit(SocketEvents.ChoosePolicy, { choice })\r\n        this.props.closeModal()\r\n    }\r\n\r\n    onButtonClose = () => {\r\n        socket.emit(SocketEvents.PeekCards)\r\n        this.props.closeModal()\r\n    }\r\n\r\n    render() {\r\n        const { data: { policies, selectable = true } } = this.props\r\n        return (\r\n            <PolicyChoiceModalComponent\r\n                policies={policies}\r\n                onClick={selectable ? this.onPolicyChoice : undefined}\r\n                selectable={selectable}\r\n                onButtonClose={this.onButtonClose}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ room: { policies } }) => ({\r\n    policies,\r\n})\r\n\r\nexport default connect(mapStateToProps)(PolicyChoiceModal)\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { FancyButton } from '../../Shared/Buttons'\nimport { Icon } from '../../Shared/Icon'\n\nimport styles from './HaltModal.css'\n\nconst HaltModalComponent = ({\n    hasGameEnded,\n    isOwner,\n    ownerName,\n    onResumeGame,\n    onInvitePlayers,\n    onEndGame,\n}) => {\n    const pauseGameReason = hasGameEnded ? 'The game has ended!' : `The owner ${ownerName} has paused the game.`\n    const renderButton = (label, onClick) => (\n        <FancyButton\n            key={label}\n            className={styles.ownerButton}\n            onClick={onClick}\n        >\n            {label}\n        </FancyButton>\n    )\n\n    return (\n        <div className={styles.haltBody}>\n            <Icon name=\"fa-pause\" />\n            <span className={styles.info}>{pauseGameReason}</span>\n            {isOwner && [\n                renderButton('Resume game', onResumeGame),\n                renderButton('Invite players', onInvitePlayers),\n                renderButton('End game', onEndGame),\n            ]}\n        </div>\n    )\n}\n\nHaltModalComponent.propTypes = {\n    hasGameEnded: PropTypes.bool,\n    isOwner: PropTypes.bool,\n    ownerName: PropTypes.string,\n    onResumeGame: PropTypes.func,\n    onInvitePlayers: PropTypes.func,\n    onEndGame: PropTypes.func,\n}\n\nexport default HaltModalComponent\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport HaltModalComponent from './HaltModalComponent'\nimport { resumeGame, openInvitePlayersScreen, endGame } from '../../../gameLogic/ownerActions'\n\nclass HaltModal extends PureComponent {\n    static propTypes = {\n        hasGameEnded: PropTypes.bool,\n        ownerName: PropTypes.string,\n        playerName: PropTypes.string,\n    }\n\n    render() {\n        const { ownerName, playerName, hasGameEnded } = this.props\n        return (\n            <HaltModalComponent\n                ownerName={ownerName}\n                hasGameEnded={hasGameEnded}\n                isOwner={playerName === ownerName}\n                onResumeGame={resumeGame}\n                onInvitePlayers={openInvitePlayersScreen}\n                onEndGame={endGame}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ room, user }) => {\n    return {\n        ownerName: room.ownerName,\n        playerName: user.userName,\n    }\n}\n\nexport default connect(mapStateToProps)(HaltModal)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { PlayerAffilications } from '../../../../Dictionary'\nimport { getAvatar } from '../../../utils/avatarsHelper'\nimport FacistMembershipImage from '../../../static/Facist_Membership.png'\nimport LiberalMembershipImage from '../../../static/Liberal_Membership.png'\nimport { FancyButton } from '../../Shared/Buttons'\n\nimport styles from './PeekAffiliationModal.css'\n\nconst PeekAffiliationModal = ({\n    avatarNumber,\n    playerName,\n    affiliation,\n    closeModal,\n}) => {\n    const membershipImage = (affiliation === PlayerAffilications.FACIST_AFFILIATION ? FacistMembershipImage : LiberalMembershipImage)\n    return (\n        <div className={styles.peekAffiliationModal}>\n            <div className={styles.playerInfo}>\n                <div className={styles.playerImages}>\n                    <img className={styles.card} alt=\"player avatar\" src={getAvatar(`liberal-${avatarNumber}`)} />\n                    <img className={styles.card} alt=\"membership\" src={membershipImage} />\n                </div>\n                <span className={styles.playerInfoName}>{playerName}</span>\n            </div>\n            <FancyButton onClick={closeModal}>\n                Acknowledged\n            </FancyButton>\n        </div>\n    )\n}\n\nPeekAffiliationModal.propTypes = {\n    closeModal: PropTypes.func.isRequired,\n    avatarNumber: PropTypes.number,\n    playerName: PropTypes.string,\n    affiliation: PropTypes.string,\n}\n\nPeekAffiliationModal.defaultProps = {\n    avatarNumber: null,\n    playerName: null,\n    affiliation: null,\n}\n\nexport default PeekAffiliationModal\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { SocketEvents } from '../../../../Dictionary'\nimport PeekAffiliationModalComponent from './PeekAffiliationModalComponent'\nimport { socket } from '../../../utils/SocketHandler'\n\nexport class PeekAffiliationModal extends PureComponent {\n    static propTypes = {\n        data: PropTypes.object,\n        closeModal: PropTypes.func,\n    };\n\n    onModalClose = () => {\n        socket.emit(SocketEvents.SuperpowerAffiliationPeekAffiliationReveal)\n        this.props.closeModal()\n    }\n\n    render() {\n        const { data: { playerInfo } } = this.props\n        return (\n            <PeekAffiliationModalComponent\n                closeModal={this.onModalClose}\n                avatarNumber={playerInfo.avatarNumber}\n                playerName={playerInfo.playerName}\n                affiliation={playerInfo.affiliation}\n            />\n        )\n    }\n}\n\nexport default PeekAffiliationModal\n","import React from 'react'\nimport { map } from 'lodash'\nimport { PlayerAvatar } from '../../Shared/PlayerAvatar'\n\nimport styles from './GameEndModal.css'\n\nexport const GameEndModalComponent = ({ players }) => (\n    <div className={styles.gameEndModal}>\n        {map(players, player => (\n            <div key={player.playerName} className={styles.playerContainer}>\n                <div>{player.playerName}</div>\n                <PlayerAvatar\n                    liberalAvatar={player.avatarNumber}\n                    fascistAvatar={player.facistAvatar}\n                    isDead={player.isDead}\n                />\n            </div>\n        ))}\n    </div>\n)\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { GameEndModalComponent } from './GameEndModalComponent'\n\nclass GameEndModal extends PureComponent {\n    static propTypes = {\n        playersDict: PropTypes.objectOf(PropTypes.any),\n    }\n    render() {\n        return (\n            <GameEndModalComponent\n                players={this.props.playersDict}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ room }) => ({\n    playersDict: room.playersDict,\n})\n\nexport default connect(mapStateToProps)(GameEndModal)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ControlButton } from '../../Shared/Buttons'\n\nimport styles from './CreateGameModal.css'\n\nconst CreateGameModalComponent = ({\n    roomName,\n    password,\n    maxPlayers,\n    onCreate,\n    onChange,\n}) => {\n    return (\n        <div className={styles.createGameModal}>\n            <div className={styles.inputField}>\n                {'Room Name:'}\n                <input name=\"roomName\" type=\"text\" value={roomName} onChange={onChange} />\n            </div>\n            <div className={styles.inputField}>\n                <div>Password<i>(optional)</i>:</div>\n                <input name=\"password\" type=\"password\" value={password} onChange={onChange} />\n            </div>\n            <div className={styles.inputField}>\n                {'Maximal number of players:'}\n                <input\n                    name=\"maxPlayers\"\n                    type=\"number\"\n                    min=\"5\"\n                    max=\"10\"\n                    value={maxPlayers}\n                    onChange={onChange}\n                />\n            </div>\n            <ControlButton className={styles.createButton} onClick={onCreate}>Create</ControlButton>\n        </div>\n    )\n}\n\nCreateGameModalComponent.propTypes = {\n    roomName: PropTypes.string,\n    password: PropTypes.string,\n    maxPlayers: PropTypes.number,\n    onCreate: PropTypes.func,\n    onChange: PropTypes.func,\n}\n\nexport default CreateGameModalComponent\n","import React from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport ModalComponent from './ModalComponent'\r\nimport * as modalActions from '../../ducks/modalDuck'\r\nimport WinningModal from './WinningModal/WinningModal'\r\nimport VotingModal from './VotingModal/VotingModal'\r\nimport PolicyChoiceModal from './PolicyChoiceModal/PolicyChoiceModal'\r\nimport HaltModal from './HaltModal/HaltModal'\r\nimport PeekAffiliationModal from './PeekAffiliationModal/PeekAffiliationModal'\r\nimport GameEndModal from './GameEndModal/GameEndModal'\r\nimport { CreateGameModal } from './CreateGameModal/CreateGameModal'\r\n\r\nconst modalInnerComponents = {\r\n    VotingModal,\r\n    PolicyChoiceModal,\r\n    WinningModal,\r\n    HaltModal,\r\n    PeekAffiliationModal,\r\n    CreateGameModal,\r\n    GameEndModal,\r\n}\r\n\r\nclass Modal extends React.PureComponent {\r\n    static propTypes = {\r\n        // redux\r\n        isVisible: PropTypes.bool,\r\n        title: PropTypes.string,\r\n        overlayClosesModal: PropTypes.bool,\r\n        isCloseButtonShown: PropTypes.bool,\r\n        isOverlayOpaque: PropTypes.bool,\r\n        componentName: PropTypes.string,\r\n        modalTmpData: PropTypes.objectOf(PropTypes.any),\r\n        modalActions: PropTypes.objectOf(PropTypes.func),\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.modalActions.toggleModal({ value: false })\r\n    }\r\n\r\n    render() {\r\n        const { isVisible, title, overlayClosesModal, isCloseButtonShown, isOverlayOpaque, componentName, modalTmpData } = this.props\r\n        const ModalInnerComponent = modalInnerComponents[componentName]\r\n\r\n        return (\r\n            <ModalComponent\r\n                isVisible={isVisible}\r\n                title={title}\r\n                overlayClosesModal={overlayClosesModal}\r\n                isCloseButtonShown={isCloseButtonShown}\r\n                isOverlayOpaque={isOverlayOpaque}\r\n                closeModal={this.closeModal}\r\n                child={ModalInnerComponent ? <ModalInnerComponent data={modalTmpData} closeModal={this.closeModal} /> : null}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ modal }) => ({\r\n    isVisible: modal.isVisible,\r\n    title: modal.title,\r\n    overlayClosesModal: modal.overlayClosesModal,\r\n    isCloseButtonShown: modal.isCloseButtonShown,\r\n    isOverlayOpaque: modal.isOverlayOpaque,\r\n    componentName: modal.componentName,\r\n    modalTmpData: modal.modalTmpData,\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    modalActions: bindActionCreators(modalActions, dispatch),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal)\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport CreateGameModalComponent from './CreateGameModalComponent'\nimport { socket } from '../../../utils/SocketHandler'\n\nimport { SocketEvents } from '../../../../Dictionary'\n\nexport class CreateGameModal extends React.PureComponent {\n    propTypes = {\n        closeModal: PropTypes.func,\n    }\n\n    state = {\n        roomName: '',\n        password: '',\n        maxPlayers: 10,\n    }\n\n    onChange = event => this.setState({ [event.target.name]: event.target.value })\n\n    onCreate = () => {\n        const { roomName, password, maxPlayers } = this.state\n        socket.emit(SocketEvents.CLIENT_CREATE_ROOM, {\n            roomName,\n            maxPlayers,\n            password,\n        })\n\n        this.props.closeModal()\n    }\n\n    render() {\n        const { roomName, password, maxPlayers } = this.state\n        return (\n            <CreateGameModalComponent\n                {...{ roomName, password, maxPlayers }}\n                onCreate={this.onCreate}\n                onChange={this.onChange}\n            />\n        )\n    }\n}\n\n","import React, { PureComponent } from 'react'\nimport { PropTypes } from 'prop-types'\nimport classNames from 'classnames/bind'\nimport { Icon } from '../Shared/Icon'\nimport { MessagesTypes } from '../../../Dictionary'\n\nimport styles from './Notifications.css'\n\nexport default class NotificationPanel extends PureComponent {\n    static propTypes = {\n        deleteNotification: PropTypes.func.isRequired,\n        id: PropTypes.number.isRequired,\n        type: PropTypes.oneOf([MessagesTypes.INFO, MessagesTypes.ERROR, MessagesTypes.STATUS]),\n        message: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.element,\n        ]),\n    }\n\n    handleClose = () => {\n        this.props.deleteNotification(this.props.id)\n    }\n\n    render() {\n        const { type, message, deleteNotification } = this.props\n        return (\n            <div\n                className={classNames(styles.notificationPanel, {\n                    [styles.info]: type === MessagesTypes.INFO,\n                    [styles.error]: type === MessagesTypes.ERROR,\n                    [styles.status]: type === MessagesTypes.STATUS,\n                })}\n            >\n                {message}\n                {deleteNotification && <Icon name=\"fa-times\" onClick={this.handleClose} className={styles.exit} />}\n            </div>\n        )\n    }\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Counter.css'\n\nexport class Counter extends React.PureComponent {\n    static displayName = 'Counter'\n    static propTypes = {\n        start: PropTypes.number,\n    }\n\n    state = { counter: this.props.start }\n\n    componentDidMount() {\n        this.interval = setInterval(this.countDown, 1000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    countDown = () => {\n        this.setState((prevState) => {\n            const newCounter = prevState.counter - 1\n\n            if (newCounter <= 0) {\n                clearInterval(this.interval)\n                return { counter: null }\n            }\n\n            return { counter: newCounter }\n        })\n    }\n\n    render() {\n        return (\n            <span className={styles.counter}>\n                {this.state.counter}sec\n            </span>\n        )\n    }\n}\n","import React from 'react'\nimport { compact, trim, map, fromPairs } from 'lodash'\nimport { Counter } from './components/Counter'\n\nexport const markupMessage = (template, values = {}) => {\n    const regex = /({.*?})/g\n    const matchedKeys = template.match(regex) || []\n    const splitedNodes = compact(template.split(regex))\n\n    const result = splitedNodes.map((val) => {\n        if (matchedKeys.includes(val)) {\n            const keyName = trim(val, ' {}')\n            return values[keyName] || '[STEVE! YOU SHOULD put some value HERE]'\n        }\n        return val\n    })\n\n    return result\n}\n\nexport const replaceKeysWithComponent = (values) => {\n    return fromPairs(map(values, (val, key) => {\n        const lowercasedKey = key.toLowerCase()\n        if (lowercasedKey.includes('bold')) {\n            return [key, <b key={key}>{val}</b>]\n        }\n        if (lowercasedKey.includes('counter')) {\n            return [key, <Counter key={key} start={val} />]\n        }\n        return [key, val]\n    }))\n}\n","import React from 'react'\nimport classNames from 'classnames/bind'\nimport { markupMessage, replaceKeysWithComponent } from './utils'\nimport styles from './Notifications.css'\n\nexport const StatusNotification = ({ message, values }) => (\n    <div className={classNames(styles.notificationPanel, styles.status)}>\n        {markupMessage(message, replaceKeysWithComponent(values))}\n    </div>\n)\n","import React from 'react'\nimport { map } from 'lodash'\nimport NotificationPanel from './NotificationPanel'\nimport { StatusNotification } from './StatusNotification'\n\nimport styles from './Notifications.css'\n\nconst NotificationsComponent = ({ notifications, statusNotification, deleteNotification }) => (\n    <div className={styles.notifications} >\n        {statusNotification &&\n            <StatusNotification\n                id={statusNotification.id}\n                message={statusNotification.message}\n                values={statusNotification.values}\n                type={statusNotification.type}\n                additional={statusNotification.additional}\n            />\n        }\n        {map(notifications, info => (\n            <NotificationPanel\n                key={`panel-${info.id}`}\n                id={info.id}\n                message={info.message}\n                type={info.type}\n                deleteNotification={deleteNotification}\n            />\n        ))}\n    </div>\n)\n\nexport default NotificationsComponent\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { find, map, takeRight, reverse } from 'lodash'\nimport NotificationPanel from './NotificationPanel'\nimport NotificationsComponent from './NotificationsComponent'\nimport { MessagesTypes } from '../../../Dictionary'\nimport * as notificationsActions from '../../ducks/notificationsDuck'\n\nexport class Notifications extends React.PureComponent {\n    static propTypes = {\n        notifications: PropTypes.arrayOf(PropTypes.object),\n        statusNotification: PropTypes.object,\n        deleteNotification: PropTypes.func.isRequired,\n    }\n\n    render() {\n        const { notifications, statusNotification, deleteNotification } = this.props\n        const selectedNotifications = reverse(takeRight(notifications, 3))\n\n        return (\n            <NotificationsComponent\n                notifications={selectedNotifications}\n                {...{ statusNotification, deleteNotification }}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = ({ notification }) => ({\n    notifications: notification.notifications,\n    statusNotification: notification.statusNotification,\n})\nconst mapDispatchToProps = dispatch => (\n    bindActionCreators(notificationsActions, dispatch)\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications)\n","import React from 'react'\n\nimport styles from './News.css'\n\nconst NewsComponent = () => {\n    return (\n        <div className={styles.news}>\n            News\n        </div>\n    )\n}\n\nexport default NewsComponent\n","import React, { PureComponent } from 'react'\nimport NewsComponent from './NewsComponent'\n\nclass News extends PureComponent {\n    render() {\n        return <NewsComponent />\n    }\n}\n\nexport default News\n","import React from 'react'\n\nimport styles from './HowToPlay.css'\n\nconst HowToPlayComponent = () => {\n    return (\n        <div className={styles.howToPlay}>\n            HowToPlay\n        </div>\n    )\n}\n\nexport default HowToPlayComponent\n","import React from 'react'\n\nimport styles from './About.css'\n\nconst AboutComponent = () => {\n    return (\n        <div className={styles.about}>\n            About\n        </div>\n    )\n}\n\nexport default AboutComponent\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Views } from '../../../Dictionary'\nimport Header from '../Header/Header'\nimport LoginPage from '../LoginPage/LoginPage'\nimport GameRoom from '../GameRoom/GameRoom'\nimport { Lobby } from '../Lobby'\nimport SocketHandler from '../../utils/SocketHandler'\nimport Modal from '../Modal/Modal'\nimport Notifications from '../Notifications/Notifications'\nimport News from './StaticPages/News/News'\nimport HowToPlayComponent from './StaticPages/HowToPlay/HowToPlayComponent'\nimport AboutComponent from './StaticPages/About/AboutComponent'\n\nimport '../../styles/globals.css'\nimport styles from './LandingPage.css'\n\nexport class LandingPage extends React.PureComponent {\n    static propTypes = {\n        currentView: PropTypes.string,\n    }\n\n    componentDidUpdate() {\n        setTimeout(() => {\n            window.scrollTo(0, 0)\n        }, 0)\n    }\n\n    renderCurrentView = () => {\n        const { currentView } = this.props\n\n        if (currentView === Views.Game) {\n            return <GameRoom />\n        }\n\n        let returnedView\n        if (currentView === Views.HowToPlay) {\n            returnedView = <HowToPlayComponent />\n        } else if (currentView === Views.News) {\n            returnedView = <News />\n        } else if (currentView === Views.About) {\n            returnedView = <AboutComponent />\n        } else if (currentView === Views.Lobby) {\n            returnedView = <Lobby />\n        } else {\n            returnedView = <LoginPage />\n        }\n\n        return (\n            <div className={styles.page}>\n                <Header />\n                {returnedView}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className={styles.landingPage}>\n                <Notifications />\n                <SocketHandler />\n                <Modal />\n                {this.renderCurrentView()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ user: { currentView } }) => ({\n    currentView,\n})\nexport default connect(mapStateToProps)(LandingPage)\n","import React from 'react'\n\nimport styles from './NotFound.css'\n\nconst NotFoundComponent = () => {\n    return (\n        <div className={styles.text404}>\n            <h1>404!</h1>\n            <h2> Not Found, please forget who you are</h2>\n        </div>\n    )\n}\n\nexport default NotFoundComponent\n","import React from 'react'\nimport NotFoundComponent from './NotFoundComponent'\n\nexport default class NotFound extends React.PureComponent {\n    render() {\n        return (\n            <NotFoundComponent />\n        )\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'react-router-redux'\nimport { Route, Switch } from 'react-router'\n\nimport { store, history } from './store'\n\nimport LandingPage from './features/LandingPage/LandingPage'\nimport NotFound from './features/NotFound/NotFound'\n\nrender(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Switch>\n                <Route exact path=\"/\" component={LandingPage} />\n                <Route path=\"*\" component={NotFound} />\n            </Switch>\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}